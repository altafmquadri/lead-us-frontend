{"ast":null,"code":"var _jsxFileName = \"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/containers/WeeklyPresentationMetric.js\";\nimport React from 'react';\nimport moment from 'moment';\n\nclass WeeklyPresentationMetric extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentDate: moment(),\n      currentUser: this.props.currentUser,\n      appointments: this.props.appointments\n    };\n\n    this.getWeeklyPresentations = () => {\n      let filteredAppointmentsByWeek = this.state.appointments.filter(appointment => moment(appointment.date).isSame(this.state.currentDate, 'week'));\n      let presentationAppointments = filteredAppointmentsByWeek.filter(appointment => appointment['presentation_made?']);\n      return presentationAppointments;\n    };\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.currentUser !== this.props.currentUser) {\n      this.setState({\n        currentUser: this.props.currentUser,\n        appointments: this.props.appointments,\n        presentations: this.getWeeklyPresentations\n      });\n    }\n  }\n\n  render() {\n    // console.log('i am props', this.props)\n    console.log('i am state', this.state);\n    console.log('filterAppp', this.getWeeklyPresentations());\n    return React.createElement(\"div\", {\n      className: \"weekly-presentation-metric\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Weekly Presentations\"));\n  }\n\n}\n\nexport default WeeklyPresentationMetric;","map":{"version":3,"sources":["/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/containers/WeeklyPresentationMetric.js"],"names":["React","moment","WeeklyPresentationMetric","Component","state","currentDate","currentUser","props","appointments","getWeeklyPresentations","filteredAppointmentsByWeek","filter","appointment","date","isSame","presentationAppointments","componentDidUpdate","prevState","setState","presentations","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,wBAAN,SAAuCF,KAAK,CAACG,SAA7C,CAAuD;AAAA;AAAA;AAAA,SAEnDC,KAFmD,GAE3C;AACJC,MAAAA,WAAW,EAAEJ,MAAM,EADf;AAEJK,MAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWD,WAFpB;AAGJE,MAAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC;AAHrB,KAF2C;;AAAA,SAmBnDC,sBAnBmD,GAmB1B,MAAM;AAC3B,UAAIC,0BAA0B,GAAG,KAAKN,KAAL,CAAWI,YAAX,CAAwBG,MAAxB,CAA+BC,WAAW,IAAIX,MAAM,CAACW,WAAW,CAACC,IAAb,CAAN,CAAyBC,MAAzB,CAAgC,KAAKV,KAAL,CAAWC,WAA3C,EAAwD,MAAxD,CAA9C,CAAjC;AACA,UAAIU,wBAAwB,GAAGL,0BAA0B,CAACC,MAA3B,CAAkCC,WAAW,IAAIA,WAAW,CAAC,oBAAD,CAA5D,CAA/B;AACA,aAAOG,wBAAP;AACH,KAvBkD;AAAA;;AAQnDC,EAAAA,kBAAkB,CAACC,SAAD,EAAW;AACzB,QAAIA,SAAS,CAACX,WAAV,KAA0B,KAAKC,KAAL,CAAWD,WAAzC,EAAsD;AAClD,WAAKY,QAAL,CACI;AACIZ,QAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWD,WAD5B;AAEIE,QAAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC,YAF7B;AAGIW,QAAAA,aAAa,EAAE,KAAKV;AAHxB,OADJ;AAMH;AACJ;;AASDW,EAAAA,MAAM,GAAG;AACL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyB,KAAKlB,KAA9B;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA2B,KAAKb,sBAAL,EAA3B;AACA,WACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CADJ;AAKH;;AAnCkD;;AAsCvD,eAAeP,wBAAf","sourcesContent":["import React from 'react';\nimport moment from 'moment'\n\nclass WeeklyPresentationMetric extends React.Component {\n\n    state = { \n        currentDate: moment(),\n        currentUser: this.props.currentUser,\n        appointments: this.props.appointments\n    }\n\n    componentDidUpdate(prevState){\n        if (prevState.currentUser !== this.props.currentUser) {\n            this.setState(\n                { \n                    currentUser: this.props.currentUser,\n                    appointments: this.props.appointments,\n                    presentations: this.getWeeklyPresentations  \n            })\n        }\n    } \n    \n    getWeeklyPresentations = () => {\n        let filteredAppointmentsByWeek = this.state.appointments.filter(appointment => moment(appointment.date).isSame(this.state.currentDate, 'week'))\n        let presentationAppointments = filteredAppointmentsByWeek.filter(appointment => appointment['presentation_made?'])\n        return presentationAppointments\n    }\n\n\n    render() { \n        // console.log('i am props', this.props)\n        console.log('i am state',this.state)\n        console.log('filterAppp' , this.getWeeklyPresentations())\n        return ( \n            <div className=\"weekly-presentation-metric\">\n                <h2>Weekly Presentations</h2>\n            </div>\n        );\n    }\n}\n\nexport default WeeklyPresentationMetric;"]},"metadata":{},"sourceType":"module"}