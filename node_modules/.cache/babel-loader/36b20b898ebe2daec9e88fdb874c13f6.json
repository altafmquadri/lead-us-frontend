{"ast":null,"code":"'use strict';\n\nimport Typeahead from 'suggestions';\nimport debounce from 'lodash.debounce';\nimport { EventEmitter } from 'events';\nimport utils from '../utils'; // Geocoder - this slightly mimicks the mapboxl-gl-geocoder but isn't an exact replica.\n// Once gl-js plugins can be added to custom divs, we should be able to require mapbox-gl-geocoder\n// instead of including it here\n\nexport default class Geocoder {\n  constructor(options) {\n    this._ev = new EventEmitter();\n    this.options = options;\n    this.api = options && options.api || 'https://api.mapbox.com/geocoding/v5/mapbox.places/';\n  }\n\n  onAdd(map) {\n    this._map = map;\n    this.request = new XMLHttpRequest(); // Template\n\n    var el = document.createElement('div');\n    el.className = 'mapboxgl-ctrl-geocoder';\n    var icon = document.createElement('span');\n    icon.className = 'geocoder-icon geocoder-icon-search';\n    var input = this._inputEl = document.createElement('input');\n    input.type = 'text';\n    input.placeholder = this.options.placeholder;\n    input.addEventListener('keydown', debounce(function (e) {\n      if (!e.target.value) return this._clearEl.classList.remove('active'); // TAB, ESC, LEFT, RIGHT, ENTER, UP, DOWN\n\n      if (e.metaKey || [9, 27, 37, 39, 13, 38, 40].indexOf(e.keyCode) !== -1) return;\n\n      this._queryFromInput(e.target.value);\n    }.bind(this)), 200);\n    input.addEventListener('change', function (e) {\n      if (e.target.value) this._clearEl.classList.add('active');\n      var selected = this._typeahead.selected;\n\n      if (selected) {\n        if (this.options.flyTo) {\n          if (selected.bbox && selected.context && selected.context.length <= 3 || selected.bbox && !selected.context) {\n            var bbox = selected.bbox;\n            map.fitBounds([[bbox[0], bbox[1]], [bbox[2], bbox[3]]]);\n          } else {\n            map.flyTo({\n              center: selected.center,\n              zoom: this.options.zoom\n            });\n          }\n        }\n\n        this._input = selected;\n        this.fire('result', {\n          result: selected\n        });\n      }\n    }.bind(this));\n    var actions = document.createElement('div');\n    actions.classList.add('geocoder-pin-right');\n    var clear = this._clearEl = document.createElement('button');\n    clear.className = 'geocoder-icon geocoder-icon-close';\n    clear.addEventListener('click', this._clear.bind(this));\n    var loading = this._loadingEl = document.createElement('span');\n    loading.className = 'geocoder-icon geocoder-icon-loading';\n    actions.appendChild(clear);\n    actions.appendChild(loading);\n    el.appendChild(icon);\n    el.appendChild(input);\n    el.appendChild(actions); // Override the control being added to control containers\n\n    if (this.options.container) this.options.position = false;\n    this._typeahead = new Typeahead(input, [], {\n      filter: false\n    });\n\n    this._typeahead.getItemValue = function (item) {\n      return item.place_name;\n    };\n\n    return el;\n  }\n\n  _geocode(q, callback) {\n    this._loadingEl.classList.add('active');\n\n    this.fire('loading');\n    const geocodingOptions = this.options;\n    const exclude = ['placeholder', 'zoom', 'flyTo', 'accessToken'];\n    const options = Object.keys(this.options).filter(function (key) {\n      return exclude.indexOf(key) === -1;\n    }).map(function (key) {\n      return key + '=' + geocodingOptions[key];\n    });\n    var accessToken = this.options.accessToken ? this.options.accessToken : mapboxgl.accessToken;\n    options.push('access_token=' + accessToken);\n    this.request.abort();\n    this.request.open('GET', this.api + encodeURIComponent(q.trim()) + '.json?' + options.join('&'), true);\n\n    this.request.onload = function () {\n      this._loadingEl.classList.remove('active');\n\n      if (this.request.status >= 200 && this.request.status < 400) {\n        var data = JSON.parse(this.request.responseText);\n\n        if (data.features.length) {\n          this._clearEl.classList.add('active');\n        } else {\n          this._clearEl.classList.remove('active');\n\n          this._typeahead.selected = null;\n        }\n\n        this.fire('results', {\n          results: data.features\n        });\n\n        this._typeahead.update(data.features);\n\n        return callback(data.features);\n      } else {\n        this.fire('error', {\n          error: JSON.parse(this.request.responseText).message\n        });\n      }\n    }.bind(this);\n\n    this.request.onerror = function () {\n      this._loadingEl.classList.remove('active');\n\n      this.fire('error', {\n        error: JSON.parse(this.request.responseText).message\n      });\n    }.bind(this);\n\n    this.request.send();\n  }\n\n  _queryFromInput(q) {\n    q = q.trim();\n    if (!q) this._clear();\n\n    if (q.length > 2) {\n      this._geocode(q, function (results) {\n        this._results = results;\n      }.bind(this));\n    }\n  }\n\n  _change() {\n    var onChange = document.createEvent('HTMLEvents');\n    onChange.initEvent('change', true, false);\n\n    this._inputEl.dispatchEvent(onChange);\n  }\n\n  _query(input) {\n    if (!input) return;\n\n    if (typeof input === 'object' && input.length) {\n      input = [utils.wrap(input[0]), utils.wrap(input[1])].join();\n    }\n\n    this._geocode(input, function (results) {\n      if (!results.length) return;\n      var result = results[0];\n      this._results = results;\n      this._typeahead.selected = result;\n      this._inputEl.value = result.place_name;\n\n      this._change();\n    }.bind(this));\n  }\n\n  _setInput(input) {\n    if (!input) return;\n\n    if (typeof input === 'object' && input.length) {\n      input = [utils.roundWithOriginalPrecision(utils.wrap(input[0]), input[0]), utils.roundWithOriginalPrecision(utils.wrap(input[1]), input[1])].join();\n    } // Set input value to passed value and clear everything else.\n\n\n    this._inputEl.value = input;\n    this._input = null;\n    this._typeahead.selected = null;\n\n    this._typeahead.clear();\n\n    this._change();\n  }\n\n  _clear() {\n    this._input = null;\n    this._inputEl.value = '';\n    this._typeahead.selected = null;\n\n    this._typeahead.clear();\n\n    this._change();\n\n    this._inputEl.focus();\n\n    this._clearEl.classList.remove('active');\n\n    this.fire('clear');\n  }\n\n  getResult() {\n    return this._input;\n  }\n  /**\n   * Set & query the input\n   * @param {Array|String} query An array of coordinates [lng, lat] or location name as a string.\n   * @returns {Geocoder} this\n   */\n\n\n  query(query) {\n    this._query(query);\n\n    return this;\n  }\n  /**\n   * Set input\n   * @param {Array|String} value An array of coordinates [lng, lat] or location name as a string. Calling this function just sets the input and does not trigger an API request.\n   * @returns {Geocoder} this\n   */\n\n\n  setInput(value) {\n    this._setInput(value);\n\n    return this;\n  }\n  /**\n   * Subscribe to events that happen within the plugin.\n   * @param {String} type name of event. Available events and the data passed into their respective event objects are:\n   *\n   * - __clear__ `Emitted when the input is cleared`\n   * - __loading__ `Emitted when the geocoder is looking up a query`\n   * - __results__ `{ results } Fired when the geocoder returns a response`\n   * - __result__ `{ result } Fired when input is set`\n   * - __error__ `{ error } Error as string\n   * @param {Function} fn function that's called when the event is emitted.\n   * @returns {Geocoder} this;\n   */\n\n\n  on(type, fn) {\n    this._ev.on(type, fn);\n\n    return this;\n  }\n  /**\n   * Fire an event\n   * @param {String} type event name.\n   * @param {Object} data event data to pass to the function subscribed.\n   * @returns {Geocoder} this\n   */\n\n\n  fire(type, data) {\n    this._ev.emit(type, data);\n\n    return this;\n  }\n  /**\n   * Remove an event\n   * @returns {Geocoder} this\n   * @param {String} type Event name.\n   * @param {Function} fn Function that should unsubscribe to the event emitted.\n   */\n\n\n  off(type, fn) {\n    this._ev.removeListener(type, fn);\n\n    return this;\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/node_modules/@mapbox/mapbox-gl-directions/src/controls/geocoder.js"],"names":["Typeahead","debounce","EventEmitter","utils","Geocoder","constructor","options","_ev","api","onAdd","map","_map","request","XMLHttpRequest","el","document","createElement","className","icon","input","_inputEl","type","placeholder","addEventListener","e","target","value","_clearEl","classList","remove","metaKey","indexOf","keyCode","_queryFromInput","bind","add","selected","_typeahead","flyTo","bbox","context","length","fitBounds","center","zoom","_input","fire","result","actions","clear","_clear","loading","_loadingEl","appendChild","container","position","filter","getItemValue","item","place_name","_geocode","q","callback","geocodingOptions","exclude","Object","keys","key","accessToken","mapboxgl","push","abort","open","encodeURIComponent","trim","join","onload","status","data","JSON","parse","responseText","features","results","update","error","message","onerror","send","_results","_change","onChange","createEvent","initEvent","dispatchEvent","_query","wrap","_setInput","roundWithOriginalPrecision","focus","getResult","query","setInput","on","fn","emit","off","removeListener"],"mappings":"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","sourcesContent":["'use strict';\n\nimport Typeahead from 'suggestions';\nimport debounce from 'lodash.debounce';\nimport { EventEmitter } from 'events';\nimport utils from '../utils';\n\n// Geocoder - this slightly mimicks the mapboxl-gl-geocoder but isn't an exact replica.\n// Once gl-js plugins can be added to custom divs, we should be able to require mapbox-gl-geocoder\n// instead of including it here\n\nexport default class Geocoder {\n  constructor(options) {\n    this._ev = new EventEmitter();\n    this.options = options;\n    this.api = options && options.api || 'https://api.mapbox.com/geocoding/v5/mapbox.places/';\n  }\n\n  onAdd(map) {\n    this._map = map;\n\n    this.request = new XMLHttpRequest();\n\n    // Template\n    var el = document.createElement('div');\n    el.className = 'mapboxgl-ctrl-geocoder';\n\n    var icon = document.createElement('span');\n    icon.className = 'geocoder-icon geocoder-icon-search';\n\n    var input = this._inputEl = document.createElement('input');\n    input.type = 'text';\n    input.placeholder = this.options.placeholder;\n\n    input.addEventListener('keydown', debounce(function(e) {\n      if (!e.target.value) return this._clearEl.classList.remove('active');\n\n      // TAB, ESC, LEFT, RIGHT, ENTER, UP, DOWN\n      if (e.metaKey || [9, 27, 37, 39, 13, 38, 40].indexOf(e.keyCode) !== -1) return;\n      this._queryFromInput(e.target.value);\n    }.bind(this)), 200);\n\n    input.addEventListener('change', function(e) {\n      if (e.target.value) this._clearEl.classList.add('active');\n\n      var selected = this._typeahead.selected;\n      if (selected) {\n        if (this.options.flyTo) {\n          if (selected.bbox && selected.context && selected.context.length <= 3 ||\n              selected.bbox && !selected.context) {\n            var bbox = selected.bbox;\n            map.fitBounds([[bbox[0], bbox[1]],[bbox[2], bbox[3]]]);\n          } else {\n            map.flyTo({\n              center: selected.center,\n              zoom: this.options.zoom\n            });\n          }\n        }\n        this._input = selected;\n        this.fire('result', { result: selected });\n      }\n    }.bind(this));\n\n    var actions = document.createElement('div');\n    actions.classList.add('geocoder-pin-right');\n\n    var clear = this._clearEl = document.createElement('button');\n    clear.className = 'geocoder-icon geocoder-icon-close';\n    clear.addEventListener('click', this._clear.bind(this));\n\n    var loading = this._loadingEl = document.createElement('span');\n    loading.className = 'geocoder-icon geocoder-icon-loading';\n\n    actions.appendChild(clear);\n    actions.appendChild(loading);\n\n    el.appendChild(icon);\n    el.appendChild(input);\n    el.appendChild(actions);\n\n    // Override the control being added to control containers\n    if (this.options.container) this.options.position = false;\n\n    this._typeahead = new Typeahead(input, [], { filter: false });\n    this._typeahead.getItemValue = function(item) { return item.place_name; };\n\n    return el;\n  }\n\n  _geocode(q, callback) {\n    this._loadingEl.classList.add('active');\n    this.fire('loading');\n\n    const geocodingOptions = this.options\n    const exclude = ['placeholder', 'zoom', 'flyTo', 'accessToken'];\n    const options = Object.keys(this.options).filter(function(key) {\n      return exclude.indexOf(key) === -1;\n    }).map(function(key) {\n      return key + '=' + geocodingOptions[key];\n    });\n\n    var accessToken = this.options.accessToken ? this.options.accessToken : mapboxgl.accessToken;\n    options.push('access_token=' + accessToken);\n    this.request.abort();\n    this.request.open('GET', this.api + encodeURIComponent(q.trim()) + '.json?' + options.join('&'), true);\n    this.request.onload = function() {\n      this._loadingEl.classList.remove('active');\n      if (this.request.status >= 200 && this.request.status < 400) {\n        var data = JSON.parse(this.request.responseText);\n        if (data.features.length) {\n          this._clearEl.classList.add('active');\n        } else {\n          this._clearEl.classList.remove('active');\n          this._typeahead.selected = null;\n        }\n\n        this.fire('results', { results: data.features });\n        this._typeahead.update(data.features);\n        return callback(data.features);\n      } else {\n        this.fire('error', { error: JSON.parse(this.request.responseText).message });\n      }\n    }.bind(this);\n\n    this.request.onerror = function() {\n      this._loadingEl.classList.remove('active');\n      this.fire('error', { error: JSON.parse(this.request.responseText).message });\n    }.bind(this);\n\n    this.request.send();\n  }\n\n  _queryFromInput(q) {\n    q = q.trim();\n    if (!q) this._clear();\n    if (q.length > 2) {\n      this._geocode(q, function(results) {\n        this._results = results;\n      }.bind(this));\n    }\n  }\n\n  _change() {\n    var onChange = document.createEvent('HTMLEvents');\n    onChange.initEvent('change', true, false);\n    this._inputEl.dispatchEvent(onChange);\n  }\n\n  _query(input) {\n    if (!input) return;\n    if (typeof input === 'object' && input.length) {\n      input = [\n        utils.wrap(input[0]),\n        utils.wrap(input[1])\n      ].join();\n    }\n\n    this._geocode(input, function(results) {\n      if (!results.length) return;\n      var result = results[0];\n      this._results = results;\n      this._typeahead.selected = result;\n      this._inputEl.value = result.place_name;\n      this._change();\n    }.bind(this));\n  }\n\n  _setInput(input) {\n    if (!input) return;\n    if (typeof input === 'object' && input.length) {\n      input = [\n        utils.roundWithOriginalPrecision(utils.wrap(input[0]), input[0]),\n        utils.roundWithOriginalPrecision(utils.wrap(input[1]), input[1])\n      ].join();\n    }\n\n    // Set input value to passed value and clear everything else.\n    this._inputEl.value = input;\n    this._input = null;\n    this._typeahead.selected = null;\n    this._typeahead.clear();\n    this._change();\n  }\n\n  _clear() {\n    this._input = null;\n    this._inputEl.value = '';\n    this._typeahead.selected = null;\n    this._typeahead.clear();\n    this._change();\n    this._inputEl.focus();\n    this._clearEl.classList.remove('active');\n    this.fire('clear');\n  }\n\n  getResult() {\n    return this._input;\n  }\n\n  /**\n   * Set & query the input\n   * @param {Array|String} query An array of coordinates [lng, lat] or location name as a string.\n   * @returns {Geocoder} this\n   */\n  query(query) {\n    this._query(query);\n    return this;\n  }\n\n  /**\n   * Set input\n   * @param {Array|String} value An array of coordinates [lng, lat] or location name as a string. Calling this function just sets the input and does not trigger an API request.\n   * @returns {Geocoder} this\n   */\n  setInput(value) {\n    this._setInput(value);\n    return this;\n  }\n\n  /**\n   * Subscribe to events that happen within the plugin.\n   * @param {String} type name of event. Available events and the data passed into their respective event objects are:\n   *\n   * - __clear__ `Emitted when the input is cleared`\n   * - __loading__ `Emitted when the geocoder is looking up a query`\n   * - __results__ `{ results } Fired when the geocoder returns a response`\n   * - __result__ `{ result } Fired when input is set`\n   * - __error__ `{ error } Error as string\n   * @param {Function} fn function that's called when the event is emitted.\n   * @returns {Geocoder} this;\n   */\n  on(type, fn) {\n    this._ev.on(type, fn);\n    return this;\n  }\n\n  /**\n   * Fire an event\n   * @param {String} type event name.\n   * @param {Object} data event data to pass to the function subscribed.\n   * @returns {Geocoder} this\n   */\n  fire(type, data) {\n    this._ev.emit(type, data);\n    return this;\n  }\n\n  /**\n   * Remove an event\n   * @returns {Geocoder} this\n   * @param {String} type Event name.\n   * @param {Function} fn Function that should unsubscribe to the event emitted.\n   */\n  off(type, fn) {\n    this._ev.removeListener(type, fn);\n    return this;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}