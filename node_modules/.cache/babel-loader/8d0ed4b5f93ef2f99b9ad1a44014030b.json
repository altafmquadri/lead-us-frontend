{"ast":null,"code":"var _jsxFileName = \"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/containers/WeeklyProduction.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport { Polar } from 'react-chartjs-2';\n\nclass WeeklyProduction extends React.Component {\n  // state = { \n  // currentDate: moment(),\n  // currentUser: this.props.currentUser,\n  // appointments: this.props.appointments,\n  // weekAppointments: [],\n  // presentations: [],\n  // weeklySales: [],\n  // polarChartData: {}\n  // }\n  // setPolarChartData = () => {\n  //     const polarChartData = {\n  //         labels: ['Appointments', 'Presentations', 'Sales'],\n  //         datasets: [\n  //             {\n  //                 label: `$Weekly Presentation`,\n  //                 data: [this.state.weekAppointments.length, this.state.presentations.length, this.state.weeklySales.length],\n  //                 backgroundColor: [\n  //                     'rgba(153, 102, 255, 0.2)',\n  //                     'rgba(255, 99, 132, 0.2)',\n  //                     'rgba(54, 162, 235, 0.2)',\n  //                     'rgba(255, 206, 86, 0.2)',\n  //                     'rgba(75, 192, 192, 0.2)'\n  //                 ],\n  //                 borderColor: [\n  //                     'rgba(255, 99, 132, 1)',\n  //                     'rgba(54, 162, 235, 1)',\n  //                     'rgba(255, 206, 86, 1)',\n  //                     'rgba(75, 192, 192, 1)',\n  //                     'rgba(153, 102, 255, 1)'\n  //                 ],\n  //                 borderWidth: 1\n  //             }]\n  //     }\n  //     return polarChartData\n  // }\n  // componentDidUpdate(prevState){\n  //     if (prevState.currentUser !== this.props.currentUser) {\n  //         this.setState(\n  //             { \n  //                 currentUser: this.props.currentUser,\n  //                 appointments: this.props.appointments,\n  //         }, () => this.setState({ presentations: this.getWeeklyPresentations() }))\n  //     }\n  // } \n  // getWeeklyPresentations = () => {\n  //     let filteredAppointmentsByWeek = this.state.appointments.filter(appointment => moment(appointment.date).isSame(this.state.currentDate, 'week'))\n  //     let salesonWeeklyAppointments = filteredAppointmentsByWeek.filter(appointment => appointment['made_sale?'])\n  //     this.setState(\n  //         { \n  //             weekAppointments: filteredAppointmentsByWeek,\n  //             weeklySales: salesonWeeklyAppointments  \n  //         }, () => this.setState({ polarChartData: this.setPolarChartData()  }));\n  //     let presentationAppointments = filteredAppointmentsByWeek.filter(appointment => appointment['presentation_made?'])\n  //     return presentationAppointments\n  // }\n  render() {\n    // console.log('i am props', this.props)\n    // console.log('i am state',this.state)\n    // console.log('filterAppp' , this.getWeeklyPresentations())\n    return React.createElement(\"div\", {\n      className: \"weekly-presentation-metric\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Weekly Production\"), React.createElement(Polar, {\n      data: this.state.polarChartData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default WeeklyProduction;","map":{"version":3,"sources":["/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/containers/WeeklyProduction.js"],"names":["React","moment","Polar","WeeklyProduction","Component","render","state","polarChartData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,KAAT,QAAsB,iBAAtB;;AAEA,MAAMC,gBAAN,SAA+BH,KAAK,CAACI,SAArC,CAA+C;AAE3C;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGAC,EAAAA,MAAM,GAAG;AACL;AACA;AACA;AACA,WACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI,oBAAC,KAAD;AACQ,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,cADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAQH;;AA7E0C;;AAgF/C,eAAeJ,gBAAf","sourcesContent":["import React from 'react';\nimport moment from 'moment'\nimport { Polar } from 'react-chartjs-2'\n\nclass WeeklyProduction extends React.Component {\n\n    // state = { \n        // currentDate: moment(),\n        // currentUser: this.props.currentUser,\n        // appointments: this.props.appointments,\n        // weekAppointments: [],\n        // presentations: [],\n        // weeklySales: [],\n        // polarChartData: {}\n    // }\n\n    // setPolarChartData = () => {\n    //     const polarChartData = {\n    //         labels: ['Appointments', 'Presentations', 'Sales'],\n    //         datasets: [\n    //             {\n    //                 label: `$Weekly Presentation`,\n    //                 data: [this.state.weekAppointments.length, this.state.presentations.length, this.state.weeklySales.length],\n    //                 backgroundColor: [\n    //                     'rgba(153, 102, 255, 0.2)',\n    //                     'rgba(255, 99, 132, 0.2)',\n    //                     'rgba(54, 162, 235, 0.2)',\n    //                     'rgba(255, 206, 86, 0.2)',\n    //                     'rgba(75, 192, 192, 0.2)'\n    //                 ],\n    //                 borderColor: [\n    //                     'rgba(255, 99, 132, 1)',\n    //                     'rgba(54, 162, 235, 1)',\n    //                     'rgba(255, 206, 86, 1)',\n    //                     'rgba(75, 192, 192, 1)',\n    //                     'rgba(153, 102, 255, 1)'\n    //                 ],\n    //                 borderWidth: 1\n    //             }]\n    //     }\n    //     return polarChartData\n    // }\n\n    \n\n    // componentDidUpdate(prevState){\n    //     if (prevState.currentUser !== this.props.currentUser) {\n    //         this.setState(\n    //             { \n    //                 currentUser: this.props.currentUser,\n    //                 appointments: this.props.appointments,\n                     \n    //         }, () => this.setState({ presentations: this.getWeeklyPresentations() }))\n    //     }\n    // } \n    \n    // getWeeklyPresentations = () => {\n    //     let filteredAppointmentsByWeek = this.state.appointments.filter(appointment => moment(appointment.date).isSame(this.state.currentDate, 'week'))\n    //     let salesonWeeklyAppointments = filteredAppointmentsByWeek.filter(appointment => appointment['made_sale?'])\n    //     this.setState(\n    //         { \n    //             weekAppointments: filteredAppointmentsByWeek,\n    //             weeklySales: salesonWeeklyAppointments  \n    //         }, () => this.setState({ polarChartData: this.setPolarChartData()  }));\n    //     let presentationAppointments = filteredAppointmentsByWeek.filter(appointment => appointment['presentation_made?'])\n    //     return presentationAppointments\n    // }\n\n\n    render() { \n        // console.log('i am props', this.props)\n        // console.log('i am state',this.state)\n        // console.log('filterAppp' , this.getWeeklyPresentations())\n        return ( \n            <div className=\"weekly-presentation-metric\">\n                <h2>Weekly Production</h2>\n                <Polar \n                        data={this.state.polarChartData}\n                    />\n            </div>\n        );\n    }\n}\n\nexport default WeeklyProduction;"]},"metadata":{},"sourceType":"module"}