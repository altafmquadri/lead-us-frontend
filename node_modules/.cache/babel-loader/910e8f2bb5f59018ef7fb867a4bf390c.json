{"ast":null,"code":"import React from'react';import{Calendar,momentLocalizer}from'react-big-calendar';import moment from'moment';import\"react-big-calendar/lib/css/react-big-calendar.css\";var localizer=momentLocalizer(moment);var renderMyAppointments=function renderMyAppointments(props){if(props.appointments===undefined||props.appointments===null)return;return props.appointments.map(function(event){return{title:event.title+' with '+props.findLeadName(event.lead_id),start:new Date(new Date(event.start_time).getFullYear(),new Date(event.start_time).getMonth(),new Date(event.start_time).getDate(),new Date(event.start_time).getHours(),new Date(event.start_time).getMinutes()),end:new Date(new Date(event.end_time).getFullYear(),new Date(event.end_time).getMonth(),new Date(event.end_time).getDate(),new Date(event.end_time).getHours(),new Date(event.end_time).getMinutes())};});};var AppointmentCalendar=function AppointmentCalendar(props){return React.createElement(\"div\",{className:\"appointment-calendar\",style:{height:\"55vh\",width:\"75vw\",padding:'15px',margin:'15px auto'}},React.createElement(Calendar,{localizer:localizer,events:renderMyAppointments(props),startAccessor:\"start\",endAccessor:\"end\",onSelectEvent:function onSelectEvent(e){return alert(e.title);}}));};export default AppointmentCalendar;","map":{"version":3,"sources":["/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/components/AppointmentCalendar.js"],"names":["React","Calendar","momentLocalizer","moment","localizer","renderMyAppointments","props","appointments","undefined","map","event","title","findLeadName","lead_id","start","Date","start_time","getFullYear","getMonth","getDate","getHours","getMinutes","end","end_time","AppointmentCalendar","height","width","padding","margin","e","alert"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,QAAR,CAAkBC,eAAlB,KAAwC,oBAAxC,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAO,mDAAP,CAGA,GAAMC,CAAAA,SAAS,CAAGF,eAAe,CAACC,MAAD,CAAjC,CACA,GAAME,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,KAAD,CAAW,CAGpC,GAAIA,KAAK,CAACC,YAAN,GAAuBC,SAAvB,EAAoCF,KAAK,CAACC,YAAN,GAAuB,IAA/D,CAAqE,OAErE,MAAOD,CAAAA,KAAK,CAACC,YAAN,CAAmBE,GAAnB,CAAuB,SAAAC,KAAK,QAEjC,CACEC,KAAK,CAAED,KAAK,CAACC,KAAN,CAAc,QAAd,CAAyBL,KAAK,CAACM,YAAN,CAAmBF,KAAK,CAACG,OAAzB,CADlC,CAEEC,KAAK,CAAE,GAAIC,CAAAA,IAAJ,CAAS,GAAIA,CAAAA,IAAJ,CAASL,KAAK,CAACM,UAAf,EAA2BC,WAA3B,EAAT,CAAmD,GAAIF,CAAAA,IAAJ,CAASL,KAAK,CAACM,UAAf,EAA2BE,QAA3B,EAAnD,CAA0F,GAAIH,CAAAA,IAAJ,CAASL,KAAK,CAACM,UAAf,EAA2BG,OAA3B,EAA1F,CAAgI,GAAIJ,CAAAA,IAAJ,CAASL,KAAK,CAACM,UAAf,EAA2BI,QAA3B,EAAhI,CAAuK,GAAIL,CAAAA,IAAJ,CAASL,KAAK,CAACM,UAAf,EAA2BK,UAA3B,EAAvK,CAFT,CAGEC,GAAG,CAAE,GAAIP,CAAAA,IAAJ,CAAU,GAAIA,CAAAA,IAAJ,CAASL,KAAK,CAACa,QAAf,EAAyBN,WAAzB,EAAV,CAAkD,GAAIF,CAAAA,IAAJ,CAASL,KAAK,CAACa,QAAf,EAAyBL,QAAzB,EAAlD,CAAuF,GAAIH,CAAAA,IAAJ,CAASL,KAAK,CAACa,QAAf,EAAyBJ,OAAzB,EAAvF,CAA2H,GAAIJ,CAAAA,IAAJ,CAASL,KAAK,CAACa,QAAf,EAAyBH,QAAzB,EAA3H,CAAgK,GAAIL,CAAAA,IAAJ,CAASL,KAAK,CAACa,QAAf,EAAyBF,UAAzB,EAAhK,CAHP,CAFiC,EAA5B,CAAP,CAOD,CAZH,CAeE,GAAMG,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAAlB,KAAK,QAE/B,4BAAK,SAAS,CAAC,sBAAf,CAAsC,KAAK,CAAE,CAACmB,MAAM,CAAE,MAAT,CAAiBC,KAAK,CAAC,MAAvB,CAA+BC,OAAO,CAAE,MAAxC,CAAgDC,MAAM,CAAE,WAAxD,CAA7C,EAEE,oBAAC,QAAD,EACE,SAAS,CAAExB,SADb,CAEE,MAAM,CAAEC,oBAAoB,CAACC,KAAD,CAF9B,CAGE,aAAa,CAAC,OAHhB,CAIE,WAAW,CAAC,KAJd,CAKE,aAAa,CAAE,uBAAAuB,CAAC,QAAIC,CAAAA,KAAK,CAACD,CAAC,CAAClB,KAAH,CAAT,EALlB,EAFF,CAF+B,EAAjC,CAeA,cAAea,CAAAA,mBAAf","sourcesContent":["import React from 'react';\nimport {Calendar, momentLocalizer} from 'react-big-calendar'\nimport moment from 'moment'\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\n\nconst localizer = momentLocalizer(moment)\nconst renderMyAppointments = (props) => {\n\n\n    if (props.appointments === undefined || props.appointments === null) return\n\n    return props.appointments.map(event => (\n      \n      {\n        title: event.title + ' with ' + props.findLeadName(event.lead_id),\n        start: new Date(new Date(event.start_time).getFullYear(), new Date(event.start_time).getMonth(), new Date(event.start_time).getDate(), new Date(event.start_time).getHours(), new Date(event.start_time).getMinutes()),\n        end: new Date( new Date(event.end_time).getFullYear(), new Date(event.end_time).getMonth(), new Date(event.end_time).getDate(), new Date(event.end_time).getHours(), new Date(event.end_time).getMinutes())\n    }))\n  }\n\n  \n  const AppointmentCalendar = props => (  \n\n    <div className=\"appointment-calendar\" style={{height: \"55vh\", width:\"75vw\", padding: '15px', margin: '15px auto'}}>\n\n      <Calendar\n        localizer={localizer}\n        events={renderMyAppointments(props)}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        onSelectEvent={e => alert(e.title)}\n        /> \n    </div>\n    \n  )\n  \n  export default AppointmentCalendar;"]},"metadata":{},"sourceType":"module"}