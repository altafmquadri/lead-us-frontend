{"ast":null,"code":"var _jsxFileName = \"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/containers/LeadActivityContainer.js\";\nimport React from 'react';\nimport './LeadActivityContainer.css';\nimport ShowLeadContainer from './ShowLeadContainer';\nimport CallsContainer from './CallsContainer';\nimport CallForm from '../components/CallForm';\nimport AppointmentsContainer from './AppointmentsContainer';\nimport AppointmentForm from '../components/AppointmentForm';\nconst callsApi = 'http://localhost:3000/api/v1/calls';\nconst callsApiUpdate = 'http://localhost:3000/api/v1/calls';\nconst appointmentsApi = 'http://localhost:3000/api/v1/appointments';\n\nclass LeadActivityContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //for both\n      user_id: this.props.currentUser.id ? this.props.currentUser.id : localStorage.user_id,\n      lead_id: this.props.lead.id,\n      //for calls\n      callForm: false,\n      appointmentForm: false,\n      call_status: \"No Answer\",\n      'appointment_made?': false,\n      'archive_lead?': false,\n      callsSubmitted: false,\n      //for appointments\n      title: \"\",\n      date: \"\",\n      start_time: \"\",\n      end_time: \"\",\n      'presentation_made?': false,\n      'made_sale?': false,\n      //to get call id in case appointment is not set\n      callId: ''\n    };\n\n    this.setInitialState = () => {\n      this.setState({\n        user_id: this.props.currentUser.id,\n        lead_id: this.props.lead.id,\n        callForm: false,\n        appointmentForm: false,\n        call_status: \"No Answer\",\n        'appointment_made?': false,\n        'archive_lead?': false,\n        callsSubmitted: false,\n        title: \"\",\n        date: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        'presentation_made?': false,\n        'made_sale?': false\n      });\n    };\n\n    this.noAppUpdate = e => {\n      e.preventDefault();\n      fetch(callsApiUpdate + '/' + this.state.callId, {\n        method: 'PATCH',\n        headers: {\n          'Content-type': 'application/json',\n          Accepts: 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.state.callId,\n          'appointment_made?': false\n        })\n      }).then(res => res.json()).then(call => {\n        this.props.editCallNoApp(call);\n        this.setInitialState();\n      });\n    };\n\n    this.setAppointmentState = () => {\n      this.setState({\n        user_id: this.props.currentUser.id,\n        lead_id: this.props.lead.id,\n        callForm: false,\n        appointmentForm: true,\n        call_status: \"No Answer\",\n        'appointment_made?': false,\n        'archive_lead?': false,\n        callsSubmitted: true,\n        title: \"\",\n        date: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        'presentation_made?': false,\n        'made_sale?': false\n      });\n    };\n\n    this.onPhoneClick = () => {\n      this.setState({\n        callForm: !this.state.callForm,\n        lead_id: this.props.lead.id\n      });\n    };\n\n    this.onFormChange = e => {\n      this.setState({\n        call_status: e.target.value\n      });\n    };\n\n    this.onToggleArchive = () => {\n      this.setState({\n        'archive_lead?': !this.state['archive_lead?']\n      });\n    };\n\n    this.onToggleAppointment = () => {\n      this.setState({\n        'appointment_made?': !this.state['appointment_made?']\n      });\n    };\n\n    this.onTogglePresentation = () => {\n      this.setState({\n        'presentation_made?': !this.state['presentation_made?']\n      });\n    };\n\n    this.onToggleSale = () => {\n      this.setState({\n        'made_sale?': !this.state['made_sale?']\n      });\n    };\n\n    this.onFormSubmission = e => {\n      e.preventDefault();\n\n      if (this.state['appointment_made?'] === false) {\n        fetch(callsApi, {\n          method: 'POST',\n          headers: {\n            \"Content-type\": 'application/json',\n            Accepts: 'application/json'\n          },\n          body: JSON.stringify({\n            user_id: this.state.user_id,\n            lead_id: this.state.lead_id,\n            call_status: this.state.call_status,\n            'appointment_made?': this.state['appointment_made?'],\n            'archive_lead?': this.state['archive_lead?']\n          })\n        }).then(resp => resp.json()).then(call => this.props.addNewCall(call));\n        this.setInitialState();\n        this.setState({\n          callsSubmitted: true\n        });\n      } else if (this.state['appointment_made?']) {\n        fetch(callsApi, {\n          method: 'POST',\n          headers: {\n            \"Content-type\": 'application/json',\n            Accepts: 'application/json'\n          },\n          body: JSON.stringify({\n            user_id: this.state.user_id,\n            lead_id: this.state.lead_id,\n            call_status: this.state.call_status,\n            'appointment_made?': this.state['appointment_made?'],\n            'archive_lead?': this.state['archive_lead?']\n          })\n        }).then(resp => resp.json()).then(call => {\n          this.props.addNewCall(call);\n          this.setAppointmentState();\n          this.setState({\n            callId: call.id\n          });\n        });\n      }\n    };\n\n    this.onAppointmentSubmit = e => {\n      e.preventDefault();\n      fetch(appointmentsApi, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Accepts: 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: this.state.user_id,\n          lead_id: this.state.lead_id,\n          title: this.state.title,\n          date: this.state.date,\n          start_time: this.state.start_time,\n          end_time: this.state.end_time,\n          'presentation_made?': this.state['presentation_made?'],\n          'made_sale?': this.state['made_sale?']\n        })\n      }).then(res => res.json()).then(appointment => this.props.addNewAppointment(appointment));\n      this.setInitialState();\n    };\n\n    this.partialFormHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  render() {\n    // console.log('I am from props in leadActCont',this.props)\n    // console.log('I am from state in leadActCont',this.state)\n    return React.createElement(\"div\", {\n      className: \"activity-show-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"lead-show-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(ShowLeadContainer, {\n      lead: this.props.lead,\n      onPhoneClick: this.onPhoneClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(CallsContainer, {\n      calls: this.props.calls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(AppointmentsContainer, {\n      clickedLeadAppointments: this.props.clickedLeadAppointments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    })), this.state.callForm && !this.state.appointmentForm ? React.createElement(CallForm, {\n      calls: this.props.calls,\n      formData: this.state,\n      onToggleArchive: this.onToggleArchive,\n      onFormSubmission: this.onFormSubmission,\n      onToggleAppointment: this.onToggleAppointment,\n      onFormChange: this.onFormChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }) : null, this.state.appointmentForm ? React.createElement(AppointmentForm, {\n      formData: this.state,\n      partialFormHandler: this.partialFormHandler,\n      onTogglePresentation: this.onTogglePresentation,\n      onToggleSale: this.onToggleSale,\n      noAppUpdate: this.noAppUpdate,\n      onAppointmentSubmit: this.onAppointmentSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default LeadActivityContainer;","map":{"version":3,"sources":["/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/containers/LeadActivityContainer.js"],"names":["React","ShowLeadContainer","CallsContainer","CallForm","AppointmentsContainer","AppointmentForm","callsApi","callsApiUpdate","appointmentsApi","LeadActivityContainer","Component","state","user_id","props","currentUser","id","localStorage","lead_id","lead","callForm","appointmentForm","call_status","callsSubmitted","title","date","start_time","end_time","callId","setInitialState","setState","noAppUpdate","e","preventDefault","fetch","method","headers","Accepts","body","JSON","stringify","then","res","json","call","editCallNoApp","setAppointmentState","onPhoneClick","onFormChange","target","value","onToggleArchive","onToggleAppointment","onTogglePresentation","onToggleSale","onFormSubmission","resp","addNewCall","onAppointmentSubmit","appointment","addNewAppointment","partialFormHandler","name","render","calls","clickedLeadAppointments"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './LeadActivityContainer.css'\nimport ShowLeadContainer from './ShowLeadContainer';\nimport CallsContainer from './CallsContainer';\nimport CallForm from '../components/CallForm'\nimport AppointmentsContainer from './AppointmentsContainer';\nimport AppointmentForm from '../components/AppointmentForm'\n\nconst callsApi = 'http://localhost:3000/api/v1/calls'\nconst callsApiUpdate = 'http://localhost:3000/api/v1/calls'\nconst appointmentsApi = 'http://localhost:3000/api/v1/appointments'\n\nclass LeadActivityContainer extends React.Component {\n    state = { \n\n        //for both\n        user_id: (this.props.currentUser.id ? this.props.currentUser.id : localStorage.user_id),\n        lead_id: this.props.lead.id,\n\n        //for calls\n        callForm: false,\n        appointmentForm: false,\n        call_status: \"No Answer\",\n        'appointment_made?': false,\n        'archive_lead?': false,\n        callsSubmitted: false,\n\n        //for appointments\n        title: \"\",\n        date: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        'presentation_made?': false,\n        'made_sale?': false,\n\n        //to get call id in case appointment is not set\n        callId: ''\n\n     }\n\n     setInitialState = () => {\n         this.setState({ \n            user_id: this.props.currentUser.id, \n            lead_id: this.props.lead.id,\n            callForm: false,\n            appointmentForm: false,\n            call_status: \"No Answer\",\n            'appointment_made?': false,\n            'archive_lead?': false,\n            callsSubmitted: false,\n\n            title: \"\",\n            date: \"\",\n            start_time: \"\",\n            end_time: \"\",\n            'presentation_made?': false,\n            'made_sale?': false\n        });\n     }\n\n     noAppUpdate = (e) => {\n        e.preventDefault()\n         fetch(callsApiUpdate + '/' + this.state.callId, {\n             method: 'PATCH',\n             headers: {\n                 'Content-type': 'application/json',\n                 Accepts: 'application/json'\n             },\n             body: JSON.stringify({\n                 id: this.state.callId,\n                 'appointment_made?': false\n             })\n         }).then(res => res.json()).then(call => {\n             this.props.editCallNoApp(call)\n             this.setInitialState()\n         })\n     }\n\n     setAppointmentState = () => {\n        this.setState({ \n           user_id: this.props.currentUser.id, \n           lead_id: this.props.lead.id,\n           callForm: false,\n           appointmentForm: true,\n           call_status: \"No Answer\",\n           'appointment_made?': false,\n           'archive_lead?': false,\n           callsSubmitted: true,\n\n           title: \"\",\n           date: \"\",\n           start_time: \"\",\n           end_time: \"\",\n           'presentation_made?': false,\n           'made_sale?': false\n          \n       });\n    }\n\n     onPhoneClick = () => {\n         this.setState(\n             { callForm: !this.state.callForm,\n                lead_id: this.props.lead.id\n            });\n     }\n\n    onFormChange = (e) => {\n        this.setState({ call_status: e.target.value  });\n    }\n\n    onToggleArchive = () => {\n        this.setState({ 'archive_lead?': !this.state['archive_lead?']  });\n    }\n\n    onToggleAppointment = () => {\n        this.setState({ 'appointment_made?': !this.state['appointment_made?']  });\n    }\n\n    onTogglePresentation = () => {\n        this.setState({ 'presentation_made?': !this.state['presentation_made?']  });\n    }\n\n    onToggleSale = () => {\n        this.setState({ 'made_sale?': !this.state['made_sale?']  });\n    }\n\n    onFormSubmission = (e) => {\n        e.preventDefault()\n\n        if (this.state['appointment_made?'] === false) {\n            fetch(callsApi, {\n                method: 'POST',\n                headers: {\n                    \"Content-type\": 'application/json',\n                    Accepts: 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.state.user_id,\n                    lead_id: this.state.lead_id,\n                    call_status: this.state.call_status,\n                    'appointment_made?': this.state['appointment_made?'],\n                    'archive_lead?': this.state['archive_lead?']\n                })\n            }).then(resp => resp.json()).then(call => this.props.addNewCall(call))\n            this.setInitialState()\n            this.setState({ callsSubmitted: true  });\n\n        } else if (this.state['appointment_made?']) {\n            fetch(callsApi, {\n                method: 'POST',\n                headers: {\n                    \"Content-type\": 'application/json',\n                    Accepts: 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.state.user_id,\n                    lead_id: this.state.lead_id,\n                    call_status: this.state.call_status,\n                    'appointment_made?': this.state['appointment_made?'],\n                    'archive_lead?': this.state['archive_lead?']\n                })\n            }).then(resp => resp.json()).then(call => {\n                this.props.addNewCall(call)\n                this.setAppointmentState()\n                this.setState({ callId: call.id });\n            })    \n        }\n    }\n\n    onAppointmentSubmit = (e) => {\n        e.preventDefault()\n        fetch(appointmentsApi, {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n                Accepts: 'application/json'\n            },\n            body: JSON.stringify({\n                user_id: this.state.user_id,\n                lead_id: this.state.lead_id,\n                title: this.state.title,\n                date: this.state.date,\n                start_time: this.state.start_time,\n                end_time: this.state.end_time,\n                'presentation_made?': this.state['presentation_made?'],\n                'made_sale?': this.state['made_sale?']\n            })\n        }).then(res => res.json()).then(appointment => this.props.addNewAppointment(appointment))\n        this.setInitialState()\n    }\n\n    partialFormHandler = (e) => {\n        this.setState({ [e.target.name]: e.target.value  });\n    }\n\n    \n\n    render() { \n        // console.log('I am from props in leadActCont',this.props)\n        // console.log('I am from state in leadActCont',this.state)\n        return ( \n            <div className=\"activity-show-page\">\n                <div className=\"lead-show-page\">\n                    <ShowLeadContainer lead={this.props.lead} onPhoneClick={this.onPhoneClick}/>\n                    <CallsContainer calls={this.props.calls} />\n                    <AppointmentsContainer clickedLeadAppointments={this.props.clickedLeadAppointments}/>\n                </div>\n                {this.state.callForm  && !this.state.appointmentForm ? <CallForm calls={this.props.calls} \n                formData={this.state}\n                onToggleArchive={this.onToggleArchive}\n                onFormSubmission={this.onFormSubmission}\n                onToggleAppointment={this.onToggleAppointment}\n                onFormChange={this.onFormChange}/> : null }\n\n                {this.state.appointmentForm ? <AppointmentForm formData={this.state}\n                partialFormHandler={this.partialFormHandler}\n                onTogglePresentation={this.onTogglePresentation}\n                onToggleSale={this.onToggleSale}\n                noAppUpdate={this.noAppUpdate}\n                onAppointmentSubmit={this.onAppointmentSubmit}\n                /> : null}\n            </div>\n                \n            );\n        }\n    }\n    \n    export default LeadActivityContainer;\n   "]},"metadata":{},"sourceType":"module"}