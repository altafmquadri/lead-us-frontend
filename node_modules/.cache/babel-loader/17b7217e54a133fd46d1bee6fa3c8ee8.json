{"ast":null,"code":"import * as types from '../constants/action_types.js';\nimport deepAssign from 'deep-assign';\nconst initialState = {\n  // Options set on initialization\n  api: 'https://api.mapbox.com/directions/v5/',\n  profile: 'mapbox/driving-traffic',\n  alternatives: false,\n  congestion: false,\n  unit: 'imperial',\n  flyTo: true,\n  placeholderOrigin: 'Choose a starting place',\n  placeholderDestination: 'Choose destination',\n  zoom: 16,\n  language: 'en',\n  compile: null,\n  proximity: false,\n  styles: [],\n  // UI controls\n  controls: {\n    profileSwitcher: true,\n    inputs: true,\n    instructions: true\n  },\n  // Optional setting to pass options available to mapbox-gl-geocoder\n  geocoder: {},\n  interactive: true,\n  // Container for client registered events\n  events: {},\n  // Marker feature drawn on the map at any point.\n  origin: {},\n  destination: {},\n  hoverMarker: {},\n  waypoints: [],\n  // User input strings or result returned from geocoder\n  originQuery: null,\n  destinationQuery: null,\n  originQueryCoordinates: null,\n  destinationQueryCoordinates: null,\n  // Directions data\n  directions: [],\n  routeIndex: 0\n};\n\nfunction data(state = initialState, action) {\n  switch (action.type) {\n    case types.SET_OPTIONS:\n      return deepAssign({}, state, action.options);\n\n    case types.DIRECTIONS_PROFILE:\n      return Object.assign({}, state, {\n        profile: action.profile\n      });\n\n    case types.ORIGIN:\n      return Object.assign({}, state, {\n        origin: action.origin,\n        hoverMarker: {}\n      });\n\n    case types.DESTINATION:\n      return Object.assign({}, state, {\n        destination: action.destination,\n        hoverMarker: {}\n      });\n\n    case types.HOVER_MARKER:\n      return Object.assign({}, state, {\n        hoverMarker: action.hoverMarker\n      });\n\n    case types.WAYPOINTS:\n      return Object.assign({}, state, {\n        waypoints: action.waypoints\n      });\n\n    case types.ORIGIN_QUERY:\n      return Object.assign({}, state, {\n        originQuery: action.query\n      });\n\n    case types.DESTINATION_QUERY:\n      return Object.assign({}, state, {\n        destinationQuery: action.query\n      });\n\n    case types.ORIGIN_FROM_COORDINATES:\n      return Object.assign({}, state, {\n        originQueryCoordinates: action.coordinates\n      });\n\n    case types.DESTINATION_FROM_COORDINATES:\n      return Object.assign({}, state, {\n        destinationQueryCoordinates: action.coordinates\n      });\n\n    case types.ORIGIN_CLEAR:\n      return Object.assign({}, state, {\n        origin: {},\n        originQuery: '',\n        waypoints: [],\n        directions: []\n      });\n\n    case types.DESTINATION_CLEAR:\n      return Object.assign({}, state, {\n        destination: {},\n        destinationQuery: '',\n        waypoints: [],\n        directions: []\n      });\n\n    case types.DIRECTIONS:\n      return Object.assign({}, state, {\n        directions: action.directions\n      });\n\n    case types.ROUTE_INDEX:\n      return Object.assign({}, state, {\n        routeIndex: action.routeIndex\n      });\n\n    case types.ERROR:\n      return Object.assign({}, state, {\n        error: action.error\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default data;","map":{"version":3,"sources":["/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/node_modules/@mapbox/mapbox-gl-directions/src/reducers/index.js"],"names":["types","deepAssign","initialState","api","profile","alternatives","congestion","unit","flyTo","placeholderOrigin","placeholderDestination","zoom","language","compile","proximity","styles","controls","profileSwitcher","inputs","instructions","geocoder","interactive","events","origin","destination","hoverMarker","waypoints","originQuery","destinationQuery","originQueryCoordinates","destinationQueryCoordinates","directions","routeIndex","data","state","action","type","SET_OPTIONS","options","DIRECTIONS_PROFILE","Object","assign","ORIGIN","DESTINATION","HOVER_MARKER","WAYPOINTS","ORIGIN_QUERY","query","DESTINATION_QUERY","ORIGIN_FROM_COORDINATES","coordinates","DESTINATION_FROM_COORDINATES","ORIGIN_CLEAR","DESTINATION_CLEAR","DIRECTIONS","ROUTE_INDEX","ERROR","error"],"mappings":"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","sourcesContent":["import * as types from '../constants/action_types.js';\nimport deepAssign from 'deep-assign';\n\nconst initialState = {\n  // Options set on initialization\n  api: 'https://api.mapbox.com/directions/v5/',\n  profile: 'mapbox/driving-traffic',\n  alternatives: false,\n  congestion: false,\n  unit: 'imperial',\n  flyTo: true,\n  placeholderOrigin: 'Choose a starting place',\n  placeholderDestination: 'Choose destination',\n  zoom: 16,\n  language: 'en',\n  compile: null,\n  proximity: false,\n  styles: [],\n\n  // UI controls\n  controls: {\n    profileSwitcher: true,\n    inputs: true,\n    instructions: true\n  },\n\n  // Optional setting to pass options available to mapbox-gl-geocoder\n  geocoder: {},\n\n  interactive: true,\n\n  // Container for client registered events\n  events: {},\n\n  // Marker feature drawn on the map at any point.\n  origin: {},\n  destination: {},\n  hoverMarker: {},\n  waypoints: [],\n\n  // User input strings or result returned from geocoder\n  originQuery: null,\n  destinationQuery: null,\n  originQueryCoordinates: null,\n  destinationQueryCoordinates: null,\n\n  // Directions data\n  directions: [],\n  routeIndex: 0\n};\n\nfunction data(state = initialState, action) {\n  switch (action.type) {\n  case types.SET_OPTIONS:\n    return deepAssign({}, state, action.options);\n\n  case types.DIRECTIONS_PROFILE:\n    return Object.assign({}, state, {\n      profile: action.profile\n    });\n\n  case types.ORIGIN:\n    return Object.assign({}, state, {\n      origin: action.origin,\n      hoverMarker: {}\n    });\n\n  case types.DESTINATION:\n    return Object.assign({}, state, {\n      destination: action.destination,\n      hoverMarker: {}\n    });\n\n  case types.HOVER_MARKER:\n    return Object.assign({}, state, {\n      hoverMarker: action.hoverMarker\n    });\n\n  case types.WAYPOINTS:\n    return Object.assign({}, state, {\n      waypoints: action.waypoints\n    });\n\n  case types.ORIGIN_QUERY:\n    return Object.assign({}, state, {\n      originQuery: action.query\n    });\n\n  case types.DESTINATION_QUERY:\n    return Object.assign({}, state, {\n      destinationQuery: action.query\n    });\n\n  case types.ORIGIN_FROM_COORDINATES:\n    return Object.assign({}, state, {\n      originQueryCoordinates: action.coordinates\n    });\n\n  case types.DESTINATION_FROM_COORDINATES:\n    return Object.assign({}, state, {\n      destinationQueryCoordinates: action.coordinates\n    });\n\n  case types.ORIGIN_CLEAR:\n    return Object.assign({}, state, {\n      origin: {},\n      originQuery: '',\n      waypoints: [],\n      directions: []\n    });\n\n  case types.DESTINATION_CLEAR:\n    return Object.assign({}, state, {\n      destination: {},\n      destinationQuery: '',\n      waypoints: [],\n      directions: []\n    });\n\n  case types.DIRECTIONS:\n    return Object.assign({}, state, {\n      directions: action.directions\n    });\n\n  case types.ROUTE_INDEX:\n    return Object.assign({}, state, {\n      routeIndex: action.routeIndex\n    });\n\n  case types.ERROR:\n    return Object.assign({}, state, {\n      error: action.error\n    });\n\n  default:\n    return state;\n  }\n}\n\nexport default data;\n"]},"metadata":{},"sourceType":"module"}