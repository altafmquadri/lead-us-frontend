{"ast":null,"code":"var _jsxFileName = \"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/components/AppointmentUpdateForm.js\";\nimport React from 'react';\nimport './ActivityForms.css'; // const appointmentsApi = 'http://localhost:3000/api/v1/appointments'\n// const salesApi = 'http://localhost:3000/api/v1/sales'\n// const leadUpdateApi = 'http://localhost:3000/api/v1/leads'\n\nconst appointmentsApi = 'https://lead-us-backend.herokuapp.com//api/v1/appointments';\nconst salesApi = 'http://localhost:3000/api/v1/sales';\nconst leadUpdateApi = 'http://localhost:3000/api/v1/leads';\n\nclass AppointmentUpdateForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      appointment: this.props.clickedEditAppointment,\n      'presentation_made?': false,\n      'made_sale?': false,\n      annualized_life_premium: 0.0,\n      salePrompt: false\n    };\n\n    this.onTogglePresentation = () => {\n      this.setState({\n        'presentation_made?': !this.state['presentation_made?']\n      });\n    };\n\n    this.onToggleSale = () => {\n      this.setState({\n        'made_sale?': !this.state['made_sale?'],\n        'presentation_made?': true\n      });\n    };\n\n    this.onAptEditSubmission = e => {\n      e.preventDefault();\n      fetch(appointmentsApi + '/' + this.state.appointment.id, {\n        method: 'PATCH',\n        headers: {\n          'Content-type': 'application/json',\n          Accepts: 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.state.appointment.id,\n          'presentation_made?': this.state['presentation_made?'],\n          'made_sale?': this.state['made_sale?']\n        })\n      }).then(res => res.json()).then(appointment => {\n        if (appointment['made_sale?']) {\n          fetch(salesApi, {\n            method: 'POST',\n            headers: {\n              'Content-type': 'application/json',\n              Accepts: 'application/json'\n            },\n            body: JSON.stringify({\n              user_id: appointment.user_id,\n              lead_id: appointment.lead_id,\n              annualized_life_premium: parseFloat(this.state.annualized_life_premium)\n            })\n          }).then(res => res.json()).then(sale => this.props.addSale(sale)).then(fetch(leadUpdateApi + '/' + appointment.lead_id, {\n            method: 'PATCH',\n            headers: {\n              'Content-type': 'application/json',\n              Accepts: 'application/json'\n            },\n            body: JSON.stringify({\n              id: appointment.lead_id,\n              'sale_made?': true,\n              'lead_archived?': false\n            })\n          }).then(res => res.json()).then(lead => this.props.addPastClient(lead)));\n        }\n\n        this.props.editTheAppointment(appointment);\n      });\n      this.setState({\n        'presentation_made?': false,\n        'made_sale?': false\n      }, () => this.props.editAppointmentFormAfterSubmit());\n    };\n\n    this.amountInputHandler = e => {\n      this.setState({\n        annualized_life_premium: e.target.value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app-update-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onAptEditSubmission,\n      className: \"app-update-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app-update-label-radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Presentation Made:\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"presentation_made?\",\n      onChange: this.onTogglePresentation,\n      value: this.state['presentation_made?'],\n      checked: !!this.state['presentation_made?'] ? true : this.state['presentation_made?'] ? true : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), \"True\", React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"presentation_made?\",\n      onChange: this.onTogglePresentation,\n      value: this.state['presentation_made?'],\n      checked: !!this.state['presentation_made?'] ? null : true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), \"False\"), React.createElement(\"div\", {\n      className: \"app-update-label-radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Made Sale:\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"made_sale?\",\n      onChange: this.onToggleSale,\n      value: this.state['made_sale?'],\n      checked: !!this.state['made_sale?'] ? true : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), \"True\", React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"made_sale?\",\n      onChange: this.onToggleSale,\n      value: this.state['made_sale?'],\n      checked: !!this.state['made_sale?'] ? null : true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), \"False\"), this.state['made_sale?'] === false ? null : React.createElement(\"div\", {\n      className: \"app-update-label-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Annualized Life Premium:\"), React.createElement(\"input\", {\n      className: \"app-update-label-input-number\",\n      type: \"number\",\n      name: \"annualized_life_premium\",\n      onChange: this.amountInputHandler,\n      value: this.state.annualized_life_premium,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"submit-app-update\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"submit-btn-app-update\",\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default AppointmentUpdateForm;","map":{"version":3,"sources":["/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/components/AppointmentUpdateForm.js"],"names":["React","appointmentsApi","salesApi","leadUpdateApi","AppointmentUpdateForm","Component","state","appointment","props","clickedEditAppointment","annualized_life_premium","salePrompt","onTogglePresentation","setState","onToggleSale","onAptEditSubmission","e","preventDefault","fetch","id","method","headers","Accepts","body","JSON","stringify","then","res","json","user_id","lead_id","parseFloat","sale","addSale","lead","addPastClient","editTheAppointment","editAppointmentFormAfterSubmit","amountInputHandler","target","value","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './ActivityForms.css'\n\n// const appointmentsApi = 'http://localhost:3000/api/v1/appointments'\n// const salesApi = 'http://localhost:3000/api/v1/sales'\n// const leadUpdateApi = 'http://localhost:3000/api/v1/leads'\n\n\nconst appointmentsApi = 'https://lead-us-backend.herokuapp.com//api/v1/appointments'\nconst salesApi = 'http://localhost:3000/api/v1/sales'\nconst leadUpdateApi = 'http://localhost:3000/api/v1/leads'\n\nclass AppointmentUpdateForm extends React.Component {\n\n    state = {\n            appointment: this.props.clickedEditAppointment,\n            'presentation_made?': false,\n            'made_sale?': false,\n            annualized_life_premium: 0.0,\n            salePrompt: false\n    }\n\n    onTogglePresentation = () => {\n        this.setState({ 'presentation_made?': !this.state['presentation_made?']  });\n    }\n\n    onToggleSale = () => {\n        this.setState(\n            { \n                'made_sale?': !this.state['made_sale?'],\n                'presentation_made?': true  \n            });\n    }\n\n    onAptEditSubmission = (e) => {\n        e.preventDefault()\n        fetch(appointmentsApi + '/' + this.state.appointment.id, {\n            method: 'PATCH',\n            headers: {\n                'Content-type': 'application/json',\n                Accepts: 'application/json'\n            },\n            body: JSON.stringify({\n                id: this.state.appointment.id,\n                'presentation_made?': this.state['presentation_made?'],\n                'made_sale?': this.state['made_sale?']\n            })\n        }).then(res => res.json()).then(appointment => {\n            if (appointment['made_sale?']) {\n                fetch(salesApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-type': 'application/json',\n                        Accepts: 'application/json'\n                    },\n                    body: JSON.stringify({\n                        user_id: appointment.user_id,\n                        lead_id: appointment.lead_id,\n                        annualized_life_premium: parseFloat(this.state.annualized_life_premium)\n                    })\n                }).then(res => res.json()).then(sale => this.props.addSale(sale)).then(\n\n                fetch(leadUpdateApi + '/' + appointment.lead_id, {\n                    method: 'PATCH',\n                    headers: {\n                        'Content-type': 'application/json',\n                        Accepts: 'application/json'\n                    },\n                    body: JSON.stringify({\n                        id: appointment.lead_id,\n                        'sale_made?': true,\n                        'lead_archived?': false,\n                    })\n                }).then(res => res.json()).then(lead => this.props.addPastClient(lead)))\n\n            }\n            this.props.editTheAppointment(appointment)\n        })\n        this.setState(\n            { \n                'presentation_made?': false,\n                'made_sale?': false,\n            }, () => this.props.editAppointmentFormAfterSubmit())\n    } \n\n    amountInputHandler = (e) => {\n        this.setState({ annualized_life_premium: e.target.value })\n    }\n\n\n    render () {\n\n        return (\n            <div className=\"app-update-div\">\n                <form onSubmit={this.onAptEditSubmission} \n                    className=\"app-update-form\">\n\n                    <div className=\"app-update-label-radio\">\n                        <label>Presentation Made:</label>\n                            <input \n                                type=\"radio\" \n                                name=\"presentation_made?\" \n                                onChange={this.onTogglePresentation}\n                                value={this.state['presentation_made?']} \n                                checked={!!this.state['presentation_made?'] ? true \n                                :this.state['presentation_made?'] ? true\n                                : null}/>True\n                            \n                            <input \n                                type=\"radio\" \n                                name=\"presentation_made?\" \n                                onChange={this.onTogglePresentation}\n                                value={this.state['presentation_made?']} \n                                checked={!!this.state['presentation_made?'] ? null : true}/>False\n                    </div>\n\n                    <div className=\"app-update-label-radio\">\n                        <label>Made Sale:</label>\n                            <input \n                                type=\"radio\" \n                                name=\"made_sale?\" \n                                onChange={this.onToggleSale}\n                                value={this.state['made_sale?']} \n                                checked={!!this.state['made_sale?'] ? true : null}/>True\n                            \n                            <input \n                                type=\"radio\" \n                                name=\"made_sale?\" \n                                onChange={this.onToggleSale}\n                                value={this.state['made_sale?']} \n                                checked={!!this.state['made_sale?'] ? null : true} />False\n                    </div>\n\n                        \n                            {this.state['made_sale?'] === false ? null :\n                                <div className=\"app-update-label-input\">\n                                    <label>Annualized Life Premium:</label>\n                                        <input className=\"app-update-label-input-number\"\n                                            type=\"number\" \n                                            name=\"annualized_life_premium\"\n                                            onChange={this.amountInputHandler}\n                                            value={this.state.annualized_life_premium} />\n                                </div>}\n\n                    <div className=\"submit-app-update\">\n                        <input className=\"submit-btn-app-update\" type=\"submit\" value=\"Submit\"/>\n                    </div>\n                </form>\n            </div>\n        )\n\n    }\n}\n\nexport default AppointmentUpdateForm;"]},"metadata":{},"sourceType":"module"}