{"ast":null,"code":"import _objectSpread from \"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/App.js\";\nimport React from 'react';\nimport Navbar from './components/Navbar';\nimport MainContainer from './containers/MainContainer';\nimport NewLeadContainer from './containers/NewLeadContainer';\nimport LeadActivityContainer from './containers/LeadActivityContainer';\nimport SignupForm from './components/SignupForm';\nimport LoginForm from './components/LoginForm';\nimport Profile from './containers/Profile';\nimport MetricsContainer from './containers/MetricsContainer';\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nconst api = 'http://localhost:3000/api/v1/auto_login';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: null,\n      leads: [],\n      archived: [],\n      appointments: [],\n      calls: [],\n      clickedLead: [],\n      clickedLeadCalls: [],\n      clickedLeadAppointments: [],\n      loading: true\n    };\n\n    this.setCurrentUser = user => {\n      this.setState({\n        currentUser: user,\n        leads: user.leads.filter(leads => !leads['lead_archived?']),\n        archived: user.leads.filter(leads => leads['lead_archived?']),\n        calls: user.calls,\n        appointments: user.appointments\n      }, () => {\n        localStorage.user_id = user.id;\n        this.props.history.push('/');\n      });\n    };\n\n    this.logoutUser = () => {\n      this.setState({\n        currentUser: null\n      }, () => {\n        localStorage.removeItem('user_id');\n        localStorage.clear();\n        this.props.history.push('/login');\n      });\n    };\n\n    this.findLeadName = id => {\n      let name;\n      let lead = this.state.leads.find(lead => lead.id === id);\n      if (!lead) return;\n      name = `${lead.first_name} ${lead.last_name}`;\n      return name;\n    };\n\n    this.onLeadClick = leadData => {\n      //  console.log(\"i am the clicked lead\", leadData.lead)\n      this.props.location.pathname === \"/leads/undefined\";\n      leadData === undefined ? this.props.history.push('/profile') : this.setState({\n        clickedLead: leadData.lead,\n        clickedLeadCalls: this.state.calls.filter(calls => calls.lead_id === leadData.lead.id),\n        clickedLeadAppointments: this.state.appointments.filter(appointments => appointments.lead_id === leadData.lead.id)\n      }, () => {\n        this.props.history.push(`/leads/${leadData.lead.id}`);\n      });\n    };\n\n    this.addNewLead = newLead => {\n      this.setState(_objectSpread({}, this.state, {\n        leads: [...this.state.leads, newLead]\n      }));\n    };\n\n    this.archiveLead = lead => {\n      this.setState(_objectSpread({}, this.state, {\n        leads: [...this.state.leads, this.state.leads.filter(stateLead => stateLead.id !== lead.id)],\n        archived: [...this.state.archived, lead]\n      }));\n    };\n\n    this.addNewCall = newCall => {\n      this.setState(_objectSpread({}, this.state, {\n        calls: [...this.state.calls, newCall],\n        clickedLeadCalls: [...this.state.clickedLeadCalls, newCall]\n      }));\n    };\n\n    this.addNewAppointment = newAppointment => {\n      this.setState(_objectSpread({}, this.state, {\n        appointments: [...this.state.appointments, newAppointment],\n        clickedLeadAppointments: [...this.state.clickedLeadAppointments, newAppointment]\n      }));\n    };\n\n    this.editTheAppointment = appointment => {\n      this.setState(_objectSpread({}, this.state, {\n        appointments: [...this.state.appointments.map(stateAppointment => {\n          if (stateAppointment.id === appointment.id) {\n            return appointment;\n          } else {\n            return stateAppointment;\n          }\n        })],\n        clickedLeadAppointments: [...this.state.clickedLeadAppointments.map(stateAppointment => {\n          if (stateAppointment.id === appointment.id) {\n            return appointment;\n          } else {\n            return stateAppointment;\n          }\n        })]\n      }));\n    };\n\n    this.editCallNoApp = call => {\n      this.setState(_objectSpread({}, this.state, {\n        calls: [...this.state.calls.map(stateCall => {\n          if (stateCall.id === call.id) {\n            return call;\n          } else {\n            return stateCall;\n          }\n        })],\n        clickedLeadCalls: [...this.state.clickedLeadCalls.map(stateCall => {\n          if (stateCall.id === call.id) {\n            return call;\n          } else {\n            return stateCall;\n          }\n        })]\n      }));\n    };\n  }\n\n  //End of Functions written to add lead activity ***********************************************************************************\n  componentDidMount() {\n    //setup for auto_login\n    const user_id = localStorage.user_id;\n\n    if (user_id) {\n      fetch(api, {\n        headers: {\n          \"Authorization\": user_id\n        }\n      }).then(res => res.json()).then(user => this.setCurrentUser(user));\n    }\n\n    this.setState({\n      loading: false,\n      clickedLead: [],\n      clickedLeadCalls: [],\n      clickedLeadAppointments: []\n    });\n  }\n\n  render() {\n    // console.log(\"i am clicked lead calls\",this.state.clickedLeadCalls)\n    //console.log(this.state.currentUser)\n    // console.log(this.state.currentUser.leads)\n    // console.log(this.state.appointments)\n    console.log(this.state.leads);\n    console.log(this.state.archived);\n    console.log(this.props, 'I am in App');\n\n    if (this.state.loading) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"main-page-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      currentUser: this.state.currentUser,\n      logoutUser: this.logoutUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/leads/:id\",\n      render: routerProps => React.createElement(LeadActivityContainer, Object.assign({\n        currentUser: this.state.currentUser,\n        lead: this.state.clickedLead,\n        calls: this.state.clickedLeadCalls,\n        clickedLeadAppointments: this.state.clickedLeadAppointments,\n        addNewCall: this.addNewCall,\n        addNewAppointment: this.addNewAppointment,\n        editCallNoApp: this.editCallNoApp,\n        editTheAppointment: this.editTheAppointment,\n        archiveLead: this.archiveLead\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/profile\",\n      render: routerProps => React.createElement(Profile, Object.assign({}, routerProps, {\n        currentUser: this.state.currentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/metrics\",\n      render: routerProps => React.createElement(MetricsContainer, Object.assign({}, routerProps, {\n        currentUser: this.state.currentUser,\n        appointments: this.state.appointments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/new\",\n      render: routerProps => React.createElement(NewLeadContainer, Object.assign({\n        currentUser: this.state.currentUser,\n        addNewLead: this.addNewLead\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      render: routerProps => React.createElement(SignupForm, Object.assign({}, routerProps, {\n        setCurrentUser: this.setCurrentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      render: routerProps => React.createElement(LoginForm, Object.assign({}, routerProps, {\n        setCurrentUser: this.setCurrentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: routerProps => React.createElement(MainContainer, Object.assign({\n        leads: this.state.leads,\n        onLeadClick: this.onLeadClick,\n        currentUser: this.state.currentUser,\n        appointments: this.state.appointments,\n        findLeadName: this.findLeadName\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/App.js"],"names":["React","Navbar","MainContainer","NewLeadContainer","LeadActivityContainer","SignupForm","LoginForm","Profile","MetricsContainer","Switch","Route","withRouter","api","App","Component","state","currentUser","leads","archived","appointments","calls","clickedLead","clickedLeadCalls","clickedLeadAppointments","loading","setCurrentUser","user","setState","filter","localStorage","user_id","id","props","history","push","logoutUser","removeItem","clear","findLeadName","name","lead","find","first_name","last_name","onLeadClick","leadData","location","pathname","undefined","lead_id","addNewLead","newLead","archiveLead","stateLead","addNewCall","newCall","addNewAppointment","newAppointment","editTheAppointment","appointment","map","stateAppointment","editCallNoApp","call","stateCall","componentDidMount","fetch","headers","then","res","json","render","console","log","routerProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Navbar from './components/Navbar'\nimport MainContainer from './containers/MainContainer';\nimport NewLeadContainer from './containers/NewLeadContainer';\nimport LeadActivityContainer from './containers/LeadActivityContainer';\nimport SignupForm from './components/SignupForm';\nimport LoginForm from './components/LoginForm';\nimport Profile from './containers/Profile'\nimport MetricsContainer from './containers/MetricsContainer'\n\nimport {Switch, Route, withRouter } from \"react-router-dom\";\n\nconst api = 'http://localhost:3000/api/v1/auto_login'\n\nclass App extends React.Component {\n\n  state = { \n    currentUser: null,\n    leads: [],\n    archived: [],\n    appointments: [],\n    calls: [],\n    clickedLead: [],\n    clickedLeadCalls: [],\n    clickedLeadAppointments: [],\n    loading: true\n}\n\n\nsetCurrentUser = (user) => {\n  this.setState(\n    { \n      currentUser: user,\n      leads: user.leads.filter(leads => !leads['lead_archived?']),\n      archived: user.leads.filter(leads => leads['lead_archived?']),\n      calls: user.calls,\n      appointments: user.appointments\n    }, () => {\n      localStorage.user_id = user.id\n      this.props.history.push('/')\n    })\n}\n\nlogoutUser = () => {\n  this.setState({ currentUser: null  }, () => {\n    localStorage.removeItem('user_id')\n    localStorage.clear()\n    this.props.history.push('/login')\n  })\n}\n\n//Functions written to add lead activity ***************************************************************************************\n\nfindLeadName = (id) => {\n  let name\n  let lead = this.state.leads.find(lead => lead.id === id)\n  if (!lead) return\n  name = `${lead.first_name} ${lead.last_name}`\n  return name\n}\n\n//to point us to the lead show page\n  onLeadClick = (leadData) => {\n    //  console.log(\"i am the clicked lead\", leadData.lead)\n    this.props.location.pathname === \"/leads/undefined\"\n    leadData === undefined ? this.props.history.push('/profile') :\n    this.setState(\n      { \n        clickedLead: leadData.lead,\n        clickedLeadCalls: this.state.calls.filter(calls => calls.lead_id === leadData.lead.id), \n        clickedLeadAppointments: this.state.appointments.filter(appointments => appointments.lead_id === leadData.lead.id)\n      }, () => {\n      this.props.history.push(`/leads/${leadData.lead.id}`)\n    }) \n  }\n  //triggered by new lead form\n  addNewLead = (newLead) => {\n    this.setState (\n      {\n        ...this.state, \n        leads:  [...this.state.leads, newLead]\n        \n      }) \n  }\n\n  archiveLead = (lead) => {\n    this.setState(\n      {\n        ...this.state,\n        leads: [...this.state.leads, this.state.leads.filter(stateLead => stateLead.id !== lead.id )],\n        archived: [...this.state.archived, lead]  \n      })\n  }\n\n  //triggered by user clicking on the phone number\n  addNewCall = (newCall) => {\n  this.setState(\n    {\n      ...this.state,\n      calls: [...this.state.calls, newCall],\n      clickedLeadCalls: [...this.state.clickedLeadCalls, newCall]  \n    });\n  }\n\n  addNewAppointment = (newAppointment) => {\n  this.setState(\n    {\n      ...this.state,\n      appointments: [...this.state.appointments, newAppointment],\n      clickedLeadAppointments: [...this.state.clickedLeadAppointments, newAppointment]  \n    });\n  }\n\n  editTheAppointment = (appointment) => {\n    this.setState(\n      { \n        ...this.state,\n        appointments: [...this.state.appointments.map(stateAppointment => {\n          if (stateAppointment.id === appointment.id) {\n            return appointment\n          } else {\n            return stateAppointment\n          }\n        })],\n        clickedLeadAppointments: [...this.state.clickedLeadAppointments.map(stateAppointment => {\n          if (stateAppointment.id === appointment.id) {\n            return appointment\n          } else {\n            return stateAppointment\n          }\n        })]\n      })\n  }\n\n  //written for the cancel button on appointment form\n  editCallNoApp = (call) => {\n    this.setState(\n      { \n        ...this.state,\n        calls: [...this.state.calls.map(stateCall => {\n            if (stateCall.id === call.id) {\n              return call\n            } else {\n              return stateCall\n            }\n        })],  \n        clickedLeadCalls: [...this.state.clickedLeadCalls.map(stateCall => {\n          if (stateCall.id === call.id) {\n            return call\n          } else {\n            return stateCall\n          }\n      })]\n    });\n  }\n\n //End of Functions written to add lead activity ***********************************************************************************\n\ncomponentDidMount() {\n  //setup for auto_login\n\n  const user_id = localStorage.user_id\n  if (user_id) {\n    \n    fetch(api, {\n      headers: {\n        \"Authorization\": user_id\n      }\n    }).then(res => res.json()).then(user => this.setCurrentUser(user))\n  }\n\n  this.setState(\n    { \n      loading: false, \n      clickedLead: [],\n      clickedLeadCalls: [],\n      clickedLeadAppointments: []\n    })\n    \n}\n\n  render() {\n    // console.log(\"i am clicked lead calls\",this.state.clickedLeadCalls)\n    //console.log(this.state.currentUser)\n    // console.log(this.state.currentUser.leads)\n    // console.log(this.state.appointments)\n    console.log(this.state.leads)\n    console.log(this.state.archived)\n    console.log(this.props, 'I am in App')\n\n    if (this.state.loading) {\n      return <h1>Loading...</h1>\n    }\n\n    return (\n      <div className=\"main-page-container\">\n          <div>\n              <Navbar currentUser={this.state.currentUser} logoutUser={this.logoutUser}/>\n\n              <Switch>\n              \n                <Route path=\"/leads/:id\" render={(routerProps) => <LeadActivityContainer \n                currentUser={this.state.currentUser}\n                lead={this.state.clickedLead}\n                calls={this.state.clickedLeadCalls}\n                clickedLeadAppointments={this.state.clickedLeadAppointments}\n                addNewCall={this.addNewCall}\n                addNewAppointment={this.addNewAppointment}\n                editCallNoApp={this.editCallNoApp}\n                editTheAppointment={this.editTheAppointment}\n                archiveLead={this.archiveLead}\n                {...routerProps}/> }></Route>\n\n                <Route path=\"/profile\" render={(routerProps) => <Profile {...routerProps} currentUser={this.state.currentUser}/>}></Route>\n                <Route path=\"/metrics\" render={(routerProps) => <MetricsContainer\n                  {...routerProps} \n                  currentUser={this.state.currentUser}\n                  appointments={this.state.appointments}/>}></Route>\n\n                <Route path=\"/new\" render={(routerProps) => <NewLeadContainer\n                currentUser={this.state.currentUser} \n                addNewLead={this.addNewLead} \n                {...routerProps}/>}></Route> \n\n                <Route path=\"/signup\" render={(routerProps) => <SignupForm {...routerProps} setCurrentUser={this.setCurrentUser}/>}></Route>\n\n                <Route path=\"/login\" render={(routerProps) => <LoginForm {...routerProps} setCurrentUser={this.setCurrentUser}/>}></Route>\n\n                <Route exact path=\"/\" render={(routerProps) =>  <MainContainer \n                leads={this.state.leads} onLeadClick={this.onLeadClick} currentUser={this.state.currentUser}\n                appointments={this.state.appointments} findLeadName={this.findLeadName}\n                {...routerProps}/>}></Route>\n\n              </Switch>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}