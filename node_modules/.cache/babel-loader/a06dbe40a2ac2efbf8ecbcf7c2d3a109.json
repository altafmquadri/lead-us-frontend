{"ast":null,"code":"import _objectSpread from \"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/App.js\";\nimport React from 'react';\nimport Navbar from './components/Navbar';\nimport MainContainer from './containers/MainContainer';\nimport NewLeadContainer from './containers/NewLeadContainer';\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport LeadActivityContainer from './containers/LeadActivityContainer';\nconst api = 'http://localhost:3000/api/v1/users';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      currentUser: [],\n      leads: [],\n      appointments: [],\n      calls: [],\n      clickedLead: [],\n      loading: true\n    };\n\n    this.findLeadName = id => {\n      let name;\n      let lead = this.state.leads.find(lead => lead.id === id);\n      name = `${lead.first_name} ${lead.last_name}`;\n      return name;\n    };\n\n    this.addNewLead = newLead => {\n      this.setState(_objectSpread({}, this.state, {\n        leads: [...this.state.leads, newLead]\n      }));\n    };\n\n    this.onLeadClick = leadData => {\n      //  console.log(\"i am the clicked lead\", leadData.lead)\n      this.setState({\n        clickedLead: leadData.lead,\n        clickedLeadCalls: this.state.calls.filter(calls => calls.lead_id === leadData.lead.id)\n      }, () => {\n        this.props.history.push(`/leads/${leadData.lead.id}`);\n      });\n    };\n  }\n\n  componentDidMount() {\n    return fetch(api).then(res => res.json()).then(res => this.setState({\n      users: res.users,\n      currentUser: res.users[0],\n      //will have to implement some logic to get the current user  \n      leads: res.users[0].leads,\n      appointments: res.users[0].appointments,\n      calls: res.users[0].calls,\n      clickedLead: [],\n      clickedLeadCalls: [],\n      loading: false //added for purpose of establishing dynamic routes\n\n    }));\n  } //to point us to the lead show page\n\n\n  render() {\n    // console.log(\"i am clicked lead calls\",this.state.clickedLeadCalls)\n    if (this.state.loading) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"main-page-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/leads/:id\",\n      render: routerProps => React.createElement(LeadActivityContainer, Object.assign({\n        lead: this.state.clickedLead,\n        calls: this.state.clickedLeadCalls\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/new\",\n      render: routerProps => React.createElement(NewLeadContainer, Object.assign({\n        addNewLead: this.addNewLead\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: routerProps => React.createElement(MainContainer, Object.assign({\n        leads: this.state.leads,\n        onLeadClick: this.onLeadClick,\n        appointments: this.state.appointments,\n        findLeadName: this.findLeadName\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/App.js"],"names":["React","Navbar","MainContainer","NewLeadContainer","Switch","Route","withRouter","LeadActivityContainer","api","App","Component","state","users","currentUser","leads","appointments","calls","clickedLead","loading","findLeadName","id","name","lead","find","first_name","last_name","addNewLead","newLead","setState","onLeadClick","leadData","clickedLeadCalls","filter","lead_id","props","history","push","componentDidMount","fetch","then","res","json","render","routerProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Navbar from './components/Navbar'\nimport MainContainer from './containers/MainContainer';\nimport NewLeadContainer from './containers/NewLeadContainer';\n\nimport {Switch, Route, withRouter } from \"react-router-dom\";\nimport LeadActivityContainer from './containers/LeadActivityContainer';\n\nconst api = 'http://localhost:3000/api/v1/users'\n\nclass App extends React.Component {\n\n  state = { \n    users: [],\n    currentUser: [],\n    leads: [],\n    appointments: [],\n    calls: [],\n    clickedLead: [],\n    loading: true\n }\n\n findLeadName = (id) => {\n   let name\n   let lead = this.state.leads.find(lead => lead.id === id)\n   name = `${lead.first_name} ${lead.last_name}`\n   return name\n }\n\n //triggered by new lead form\n addNewLead = (newLead) => {\n    this.setState(\n      {\n        ...this.state, \n        leads:  [...this.state.leads, newLead] \n      }) \n     \n }\n\n componentDidMount() {\n     return fetch(api).then(res => res.json()).then(res => this.setState(\n         { \n            users: res.users,\n            currentUser: res.users[0], //will have to implement some logic to get the current user  \n            leads: res.users[0].leads,\n            appointments: res.users[0].appointments,\n            calls: res.users[0].calls,\n            clickedLead: [],\n            clickedLeadCalls: [],\n            loading: false //added for purpose of establishing dynamic routes\n        }))\n        \n }\n\n //to point us to the lead show page\n onLeadClick = (leadData) => {\n  //  console.log(\"i am the clicked lead\", leadData.lead)\n   this.setState(\n     { \n       clickedLead: leadData.lead,\n       clickedLeadCalls: this.state.calls.filter(calls => calls.lead_id === leadData.lead.id)  \n      }, () => {\n     this.props.history.push(`/leads/${leadData.lead.id}`)\n   }) \n }\n\n  render() {\n    // console.log(\"i am clicked lead calls\",this.state.clickedLeadCalls)\n    if (this.state.loading) {\n      return <h1>Loading...</h1>\n    }\n\n    return (\n      <div className=\"main-page-container\">\n          <div>\n              <Navbar />\n              <Switch>\n\n                <Route path=\"/leads/:id\" render={(routerProps) => <LeadActivityContainer \n                lead={this.state.clickedLead}\n                calls={this.state.clickedLeadCalls}\n                {...routerProps}/> }></Route>\n\n                <Route path=\"/new\" render={(routerProps) => <NewLeadContainer \n                addNewLead={this.addNewLead} \n                {...routerProps}/>}></Route> \n\n                <Route exact path=\"/\" render={(routerProps) =>  <MainContainer \n                leads={this.state.leads} onLeadClick={this.onLeadClick}\n                appointments={this.state.appointments} findLeadName={this.findLeadName}\n                {...routerProps}/>}></Route>\n\n              </Switch>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}