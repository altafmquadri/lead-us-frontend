{"ast":null,"code":"var each = require('turf-meta').coordEach;\n/**\n * Takes any {@link GeoJSON} object, calculates the extent of all input features, and returns a bounding box.\n *\n * @module turf/extent\n * @category measurement\n * @param {GeoJSON} input any valid GeoJSON Object\n * @return {Array<number>} the bounding box of `input` given\n * as an array in WSEN order (west, south, east, north)\n * @example\n * var input = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [114.175329, 22.2524]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [114.170007, 22.267969]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [114.200649, 22.274641]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [114.186744, 22.265745]\n *       }\n *     }\n *   ]\n * };\n *\n * var bbox = turf.extent(input);\n *\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * var resultFeatures = input.features.concat(bboxPolygon);\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": resultFeatures\n * };\n *\n * //=result\n */\n\n\nmodule.exports = function (layer) {\n  var extent = [Infinity, Infinity, -Infinity, -Infinity];\n  each(layer, function (coord) {\n    if (extent[0] > coord[0]) extent[0] = coord[0];\n    if (extent[1] > coord[1]) extent[1] = coord[1];\n    if (extent[2] < coord[0]) extent[2] = coord[0];\n    if (extent[3] < coord[1]) extent[3] = coord[1];\n  });\n  return extent;\n};","map":{"version":3,"sources":["/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/node_modules/turf-extent/index.js"],"names":["each","require","coordEach","module","exports","layer","extent","Infinity","coord"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBC,SAAhC;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDAC,MAAM,CAACC,OAAP,GAAiB,UAASC,KAAT,EAAgB;AAC7B,MAAIC,MAAM,GAAG,CAACC,QAAD,EAAWA,QAAX,EAAqB,CAACA,QAAtB,EAAgC,CAACA,QAAjC,CAAb;AACAP,EAAAA,IAAI,CAACK,KAAD,EAAQ,UAASG,KAAT,EAAgB;AAC1B,QAAIF,MAAM,CAAC,CAAD,CAAN,GAAYE,KAAK,CAAC,CAAD,CAArB,EAA0BF,MAAM,CAAC,CAAD,CAAN,GAAYE,KAAK,CAAC,CAAD,CAAjB;AAC1B,QAAIF,MAAM,CAAC,CAAD,CAAN,GAAYE,KAAK,CAAC,CAAD,CAArB,EAA0BF,MAAM,CAAC,CAAD,CAAN,GAAYE,KAAK,CAAC,CAAD,CAAjB;AAC1B,QAAIF,MAAM,CAAC,CAAD,CAAN,GAAYE,KAAK,CAAC,CAAD,CAArB,EAA0BF,MAAM,CAAC,CAAD,CAAN,GAAYE,KAAK,CAAC,CAAD,CAAjB;AAC1B,QAAIF,MAAM,CAAC,CAAD,CAAN,GAAYE,KAAK,CAAC,CAAD,CAArB,EAA0BF,MAAM,CAAC,CAAD,CAAN,GAAYE,KAAK,CAAC,CAAD,CAAjB;AAC3B,GALG,CAAJ;AAMA,SAAOF,MAAP;AACH,CATD","sourcesContent":["var each = require('turf-meta').coordEach;\n\n/**\n * Takes any {@link GeoJSON} object, calculates the extent of all input features, and returns a bounding box.\n *\n * @module turf/extent\n * @category measurement\n * @param {GeoJSON} input any valid GeoJSON Object\n * @return {Array<number>} the bounding box of `input` given\n * as an array in WSEN order (west, south, east, north)\n * @example\n * var input = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [114.175329, 22.2524]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [114.170007, 22.267969]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [114.200649, 22.274641]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [114.186744, 22.265745]\n *       }\n *     }\n *   ]\n * };\n *\n * var bbox = turf.extent(input);\n *\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * var resultFeatures = input.features.concat(bboxPolygon);\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": resultFeatures\n * };\n *\n * //=result\n */\nmodule.exports = function(layer) {\n    var extent = [Infinity, Infinity, -Infinity, -Infinity];\n    each(layer, function(coord) {\n      if (extent[0] > coord[0]) extent[0] = coord[0];\n      if (extent[1] > coord[1]) extent[1] = coord[1];\n      if (extent[2] < coord[0]) extent[2] = coord[0];\n      if (extent[3] < coord[1]) extent[3] = coord[1];\n    });\n    return extent;\n};\n"]},"metadata":{},"sourceType":"script"}