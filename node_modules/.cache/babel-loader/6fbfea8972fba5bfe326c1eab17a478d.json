{"ast":null,"code":"var _jsxFileName = \"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/containers/Metrics.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\n\nclass Metrics extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: this.props.currentUser,\n      currentDate: moment(),\n      appointmentDates: [],\n      filteredDatesByWeek: []\n    };\n\n    this.getDaysOfTheWeek = () => {\n      let beginningOfWeek = moment().startOf('week');\n      let endOfWeek = moment().endOf('week');\n      let daysOfWeek = [];\n\n      for (let i = 1; i < 7; i++) {\n        daysOfWeek.push(beginningOfWeek.add(1, days).toDate());\n      }\n    };\n  }\n\n  componentDidMount() {\n    let newDates, filteredDatesByWeek;\n    newDates = this.props.currentUser.appointments.map(appointment => appointment.date);\n    filteredDatesByWeek = newDates.filter(date => moment(date).isSame(this.state.currentDate, 'week'));\n    this.setState({\n      appointmentDates: [...this.state.appointmentDates, newDates],\n      filteredDatesByWeek: [...this.state.filteredDatesByWeek, filteredDatesByWeek]\n    });\n  }\n\n  render() {\n    console.log(this.state); // console.log(this.state.currentDate.toDate())\n    // console.log(moment(\"2019-12-22\").isSame(this.state.currentDate, 'week'))\n\n    let beginningOfWeek = moment().startOf('week').add(6, 'days').toDate();\n    let endOfWeek = moment().endOf('week').date();\n    console.log(beginningOfWeek, endOfWeek);\n    return React.createElement(\"div\", {\n      className: \"metrics-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Metrics\"));\n  }\n\n}\n\nexport default Metrics;","map":{"version":3,"sources":["/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/containers/Metrics.js"],"names":["React","Component","moment","Metrics","state","currentUser","props","currentDate","appointmentDates","filteredDatesByWeek","getDaysOfTheWeek","beginningOfWeek","startOf","endOfWeek","endOf","daysOfWeek","i","push","add","days","toDate","componentDidMount","newDates","appointments","map","appointment","date","filter","isSame","setState","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BG,KAD4B,GACpB;AACJC,MAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWD,WADpB;AAEJE,MAAAA,WAAW,EAAEL,MAAM,EAFf;AAGJM,MAAAA,gBAAgB,EAAE,EAHd;AAIJC,MAAAA,mBAAmB,EAAE;AAJjB,KADoB;;AAAA,SAmB5BC,gBAnB4B,GAmBT,MAAM;AACrB,UAAIC,eAAe,GAAGT,MAAM,GAAGU,OAAT,CAAiB,MAAjB,CAAtB;AACA,UAAIC,SAAS,GAAGX,MAAM,GAAGY,KAAT,CAAe,MAAf,CAAhB;AACA,UAAIC,UAAU,GAAG,EAAjB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBD,QAAAA,UAAU,CAACE,IAAX,CAAgBN,eAAe,CAACO,GAAhB,CAAoB,CAApB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAhB;AACH;AACJ,KA3B2B;AAAA;;AAQ5BC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,QAAJ,EAAcb,mBAAd;AACAa,IAAAA,QAAQ,GAAG,KAAKhB,KAAL,CAAWD,WAAX,CAAuBkB,YAAvB,CAAoCC,GAApC,CAAwCC,WAAW,IAAIA,WAAW,CAACC,IAAnE,CAAX;AACAjB,IAAAA,mBAAmB,GAAGa,QAAQ,CAACK,MAAT,CAAgBD,IAAI,IAAIxB,MAAM,CAACwB,IAAD,CAAN,CAAaE,MAAb,CAAoB,KAAKxB,KAAL,CAAWG,WAA/B,EAA4C,MAA5C,CAAxB,CAAtB;AACA,SAAKsB,QAAL,CACI;AACIrB,MAAAA,gBAAgB,EAAE,CAAC,GAAG,KAAKJ,KAAL,CAAWI,gBAAf,EAAiCc,QAAjC,CADtB;AAEIb,MAAAA,mBAAmB,EAAE,CAAC,GAAG,KAAKL,KAAL,CAAWK,mBAAf,EAAoCA,mBAApC;AAFzB,KADJ;AAKH;;AAaDqB,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK5B,KAAjB,EADK,CAEL;AACA;;AACA,QAAIO,eAAe,GAAGT,MAAM,GAAGU,OAAT,CAAiB,MAAjB,EAAyBM,GAAzB,CAA6B,CAA7B,EAAgC,MAAhC,EAAwCE,MAAxC,EAAtB;AACA,QAAIP,SAAS,GAAGX,MAAM,GAAGY,KAAT,CAAe,MAAf,EAAuBY,IAAvB,EAAhB;AAIAK,IAAAA,OAAO,CAACC,GAAR,CAAYrB,eAAZ,EAA6BE,SAA7B;AACA,WACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ;AAKH;;AA7C2B;;AAgDhC,eAAeV,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment'\n\nclass Metrics extends Component {\n    state = { \n        currentUser: this.props.currentUser,\n        currentDate: moment(),\n        appointmentDates: [],\n        filteredDatesByWeek: []\n    }\n\n    componentDidMount() {\n        let newDates, filteredDatesByWeek\n        newDates = this.props.currentUser.appointments.map(appointment => appointment.date)\n        filteredDatesByWeek = newDates.filter(date => moment(date).isSame(this.state.currentDate, 'week'))\n        this.setState(\n            { \n                appointmentDates: [...this.state.appointmentDates, newDates],\n                filteredDatesByWeek: [...this.state.filteredDatesByWeek, filteredDatesByWeek]\n            })\n    }\n\n    getDaysOfTheWeek = () => {\n        let beginningOfWeek = moment().startOf('week')\n        let endOfWeek = moment().endOf('week')\n        let daysOfWeek = []\n\n        for (let i = 1; i < 7; i++) {\n            daysOfWeek.push(beginningOfWeek.add(1, days).toDate())\n        }\n    }\n\n\n    render() {\n        console.log(this.state)\n        // console.log(this.state.currentDate.toDate())\n        // console.log(moment(\"2019-12-22\").isSame(this.state.currentDate, 'week'))\n        let beginningOfWeek = moment().startOf('week').add(6, 'days').toDate()\n        let endOfWeek = moment().endOf('week').date()\n\n\n       \n        console.log(beginningOfWeek, endOfWeek)\n        return ( \n            <div className=\"metrics-page\">\n                <h1>Metrics</h1>\n            </div>\n        );\n    }\n}\n\nexport default Metrics;"]},"metadata":{},"sourceType":"module"}