{"ast":null,"code":"import _defineProperty from\"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import'./LeadActivityContainer.css';import ShowLeadContainer from'./ShowLeadContainer';import CallsContainer from'./CallsContainer';import CallForm from'../components/CallForm';import AppointmentsContainer from'./AppointmentsContainer';import AppointmentForm from'../components/AppointmentForm';import Map from'./Map';import AppointmentUpdateForm from'../components/AppointmentUpdateForm';// const callsApi = 'http://localhost:3000/api/v1/calls'\n// const leadUpdateApi = 'http://localhost:3000/api/v1/leads'\n// const callsApiUpdate = 'http://localhost:3000/api/v1/calls'\n// const appointmentsApi = 'http://localhost:3000/api/v1/appointments'\nvar callsApi='https://lead-us-backend.herokuapp.com/api/v1/calls';var leadUpdateApi='https://lead-us-backend.herokuapp.com/api/v1/leads';var callsApiUpdate='https://lead-us-backend.herokuapp.com/api/v1/calls';var appointmentsApi='https://lead-us-backend.herokuapp.com/api/v1/appointments';var LeadActivityContainer=/*#__PURE__*/function(_React$Component){_inherits(LeadActivityContainer,_React$Component);function LeadActivityContainer(){var _getPrototypeOf2;var _this;_classCallCheck(this,LeadActivityContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(LeadActivityContainer)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={//for both\nuser_id:'',lead_id:_this.props.lead.id,//for calls\ncallForm:false,appointmentForm:false,call_status:\"No Answer\",'appointment_made?':false,'archive_lead?':false,callsSubmitted:false,//for appointments\ntitle:\"\",date:\"\",start_time:\"\",end_time:\"\",//to get call id in case appointment is not set\ncallId:'',//edit appointment form\neditAppointment:false,clickedEditAppointment:''};_this.setInitialState=function(){_this.setState({user_id:_this.props.currentUser.id,lead_id:_this.props.lead.id,callForm:false,appointmentForm:false,call_status:\"No Answer\",'appointment_made?':false,'archive_lead?':false,callsSubmitted:false,title:\"\",date:\"\",start_time:\"\",end_time:\"\",editAppointment:false,clickedEditAppointment:''});};_this.editAppointmentFormAfterSubmit=function(){_this.setState({editAppointment:!_this.state.editAppointment});};_this.noAppUpdate=function(e){e.preventDefault();fetch(callsApiUpdate+'/'+_this.state.callId,{method:'PATCH',headers:{'Content-type':'application/json',Accepts:'application/json'},body:JSON.stringify({id:_this.state.callId,'appointment_made?':false})}).then(function(res){return res.json();}).then(function(call){_this.props.editCallNoApp(call);_this.setInitialState();});};_this.setAppointmentState=function(){_this.setState({user_id:_this.props.currentUser.id,lead_id:_this.props.lead.id,callForm:false,appointmentForm:true,call_status:\"No Answer\",'appointment_made?':false,'archive_lead?':false,callsSubmitted:true,title:\"\",date:\"\",start_time:\"\",end_time:\"\"});};_this.onPhoneClick=function(){_this.setState({callForm:!_this.state.callForm,lead_id:_this.props.lead.id});};_this.onEditAppointmentClick=function(appointment){_this.setState({editAppointment:!_this.state.editAppointment,clickedEditAppointment:appointment});};_this.onFormChange=function(e){_this.setState({call_status:e.target.value});};_this.onToggleArchive=function(){_this.setState({'archive_lead?':!_this.state['archive_lead?'],'appointment_made?':false});};_this.onToggleAppointment=function(){_this.setState({'appointment_made?':!_this.state['appointment_made?'],'archive_lead?':false});};_this.onFormSubmission=function(e){e.preventDefault();if(_this.state['appointment_made?']===false){fetch(callsApi,{method:'POST',headers:{\"Content-type\":'application/json',Accepts:'application/json'},body:JSON.stringify({user_id:_this.state.user_id,lead_id:_this.state.lead_id,call_status:_this.state.call_status,'appointment_made?':_this.state['appointment_made?'],'archive_lead?':_this.state['archive_lead?']})}).then(function(resp){return resp.json();}).then(function(call){_this.props.addNewCall(call);_this.setInitialState();_this.setState({callsSubmitted:true});// used to archive lead\nif(call['archive_lead?']){fetch(leadUpdateApi+'/'+_this.state.lead_id,{method:'PATCH',headers:{'Content-type':'application/json',Accepts:'application/json'},body:JSON.stringify({id:_this.state.lead_id,'lead_archived?':true})}).then(function(res){return res.json();}).then(function(lead){return _this.props.archiveLead(lead);});}});}else if(_this.state['appointment_made?']){fetch(callsApi,{method:'POST',headers:{\"Content-type\":'application/json',Accepts:'application/json'},body:JSON.stringify({user_id:_this.state.user_id,lead_id:_this.state.lead_id,call_status:_this.state.call_status,'appointment_made?':_this.state['appointment_made?'],'archive_lead?':_this.state['archive_lead?']})}).then(function(resp){return resp.json();}).then(function(call){_this.props.addNewCall(call);_this.setAppointmentState();_this.setState({callId:call.id});});}};_this.onAppointmentSubmit=function(e){e.preventDefault();var newStartTime=_this.state.date+'T'+_this.state.start_time;var newEndTime=_this.state.date+'T'+_this.state.end_time;fetch(appointmentsApi,{method:'POST',headers:{'Content-type':'application/json',Accepts:'application/json'},body:JSON.stringify({user_id:_this.state.user_id,lead_id:_this.state.lead_id,title:_this.state.title,date:_this.state.date,start_time:newStartTime,end_time:newEndTime})}).then(function(res){return res.json();}).then(function(appointment){return _this.props.addNewAppointment(appointment);});_this.setInitialState();};_this.partialFormHandler=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));};return _this;}_createClass(LeadActivityContainer,[{key:\"componentDidMount\",value:function componentDidMount(){var newState=this.props.currentUser===null?localStorage.user_id:this.props.currentUser.id;// console.log(\"i am newstate:\",newState)\nthis.setState({user_id:newState});}},{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"activity-show-page\"},React.createElement(\"div\",{className:\"lead-show-page\"},React.createElement(ShowLeadContainer,{lead:this.props.lead,onPhoneClick:this.onPhoneClick}),React.createElement(CallsContainer,{calls:this.props.calls}),React.createElement(AppointmentsContainer,{clickedLeadAppointments:this.props.clickedLeadAppointments,onEditAppointmentClick:this.onEditAppointmentClick})),this.state.callForm&&!this.state.appointmentForm?React.createElement(CallForm,{calls:this.props.calls,formData:this.state,onToggleArchive:this.onToggleArchive,onFormSubmission:this.onFormSubmission,onToggleAppointment:this.onToggleAppointment,onFormChange:this.onFormChange}):null,this.state.appointmentForm?React.createElement(AppointmentForm,{formData:this.state,partialFormHandler:this.partialFormHandler,noAppUpdate:this.noAppUpdate,onAppointmentSubmit:this.onAppointmentSubmit}):null,this.state.editAppointment?React.createElement(AppointmentUpdateForm,{editTheAppointment:this.props.editTheAppointment,editAppointmentFormAfterSubmit:this.editAppointmentFormAfterSubmit,clickedEditAppointment:this.state.clickedEditAppointment,addSale:this.props.addSale,addPastClient:this.props.addPastClient}):null,React.createElement(\"div\",{className:\"map-div\"},React.createElement(Map,{lead:this.props.lead,user:this.props.currentUser})));}}]);return LeadActivityContainer;}(React.Component);export default LeadActivityContainer;","map":{"version":3,"sources":["/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/containers/LeadActivityContainer.js"],"names":["React","ShowLeadContainer","CallsContainer","CallForm","AppointmentsContainer","AppointmentForm","Map","AppointmentUpdateForm","callsApi","leadUpdateApi","callsApiUpdate","appointmentsApi","LeadActivityContainer","state","user_id","lead_id","props","lead","id","callForm","appointmentForm","call_status","callsSubmitted","title","date","start_time","end_time","callId","editAppointment","clickedEditAppointment","setInitialState","setState","currentUser","editAppointmentFormAfterSubmit","noAppUpdate","e","preventDefault","fetch","method","headers","Accepts","body","JSON","stringify","then","res","json","call","editCallNoApp","setAppointmentState","onPhoneClick","onEditAppointmentClick","appointment","onFormChange","target","value","onToggleArchive","onToggleAppointment","onFormSubmission","resp","addNewCall","archiveLead","onAppointmentSubmit","newStartTime","newEndTime","addNewAppointment","partialFormHandler","name","newState","localStorage","calls","clickedLeadAppointments","editTheAppointment","addSale","addPastClient","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './LeadActivityContainer.css'\nimport ShowLeadContainer from './ShowLeadContainer';\nimport CallsContainer from './CallsContainer';\nimport CallForm from '../components/CallForm'\nimport AppointmentsContainer from './AppointmentsContainer';\nimport AppointmentForm from '../components/AppointmentForm'\nimport Map from './Map'\nimport AppointmentUpdateForm from '../components/AppointmentUpdateForm';\n\n// const callsApi = 'http://localhost:3000/api/v1/calls'\n// const leadUpdateApi = 'http://localhost:3000/api/v1/leads'\n// const callsApiUpdate = 'http://localhost:3000/api/v1/calls'\n// const appointmentsApi = 'http://localhost:3000/api/v1/appointments'\n\nconst callsApi = 'https://lead-us-backend.herokuapp.com/api/v1/calls'\nconst leadUpdateApi = 'https://lead-us-backend.herokuapp.com/api/v1/leads'\nconst callsApiUpdate = 'https://lead-us-backend.herokuapp.com/api/v1/calls'\nconst appointmentsApi = 'https://lead-us-backend.herokuapp.com/api/v1/appointments'\n\n\nclass LeadActivityContainer extends React.Component {\n    state = { \n\n        //for both\n        user_id: '',\n        lead_id: this.props.lead.id,\n\n        //for calls\n        callForm: false,\n        appointmentForm: false,\n        call_status: \"No Answer\",\n        'appointment_made?': false,\n        'archive_lead?': false,\n        callsSubmitted: false,\n\n        //for appointments\n        title: \"\",\n        date: \"\",\n        start_time: \"\",\n        end_time: \"\",\n\n        //to get call id in case appointment is not set\n        callId: '',\n\n        //edit appointment form\n        editAppointment: false,\n        clickedEditAppointment: ''\n\n    }\n\n    setInitialState = () => {\n        this.setState({ \n            user_id: this.props.currentUser.id, \n            lead_id: this.props.lead.id,\n            callForm: false,\n            appointmentForm: false,\n            call_status: \"No Answer\",\n            'appointment_made?': false,\n            'archive_lead?': false,\n            callsSubmitted: false,\n\n            title: \"\",\n            date: \"\",\n            start_time: \"\",\n            end_time: \"\",\n            editAppointment: false,\n            clickedEditAppointment: ''\n        });\n    }\n\n    editAppointmentFormAfterSubmit = () => {\n        this.setState({ editAppointment: !this.state.editAppointment });\n    }\n\n    noAppUpdate = (e) => {\n        e.preventDefault()\n        fetch(callsApiUpdate + '/' + this.state.callId, {\n            method: 'PATCH',\n            headers: {\n                'Content-type': 'application/json',\n                Accepts: 'application/json'\n            },\n            body: JSON.stringify({\n                id: this.state.callId,\n                'appointment_made?': false\n            })\n        }).then(res => res.json()).then(call => {\n            this.props.editCallNoApp(call)\n            this.setInitialState()\n        })\n    }\n\n        setAppointmentState = () => {\n        this.setState({ \n            user_id: this.props.currentUser.id, \n            lead_id: this.props.lead.id,\n            callForm: false,\n            appointmentForm: true,\n            call_status: \"No Answer\",\n            'appointment_made?': false,\n            'archive_lead?': false,\n            callsSubmitted: true,\n\n            title: \"\",\n            date: \"\",\n            start_time: \"\",\n            end_time: \"\",\n        });\n    }\n\n    onPhoneClick = () => {\n        this.setState(\n        { \n            callForm: !this.state.callForm,\n            lead_id: this.props.lead.id\n        });\n    }\n\n    onEditAppointmentClick = (appointment) => {\n        this.setState(\n            { \n                editAppointment: !this.state.editAppointment,\n                clickedEditAppointment: appointment \n            })\n    } \n\n    onFormChange = (e) => {\n        this.setState({ call_status: e.target.value  });\n    }\n\n    onToggleArchive = () => {\n        this.setState(\n            { \n                'archive_lead?': !this.state['archive_lead?'],\n                'appointment_made?': false  \n            });\n    }\n\n    onToggleAppointment = () => {\n        this.setState(\n            { \n                'appointment_made?': !this.state['appointment_made?'],\n                'archive_lead?': false  \n            })\n    }\n\n    onFormSubmission = (e) => {\n        e.preventDefault()\n\n        if (this.state['appointment_made?'] === false) {\n            fetch(callsApi, {\n                method: 'POST',\n                headers: {\n                    \"Content-type\": 'application/json',\n                    Accepts: 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.state.user_id,\n                    lead_id: this.state.lead_id,\n                    call_status: this.state.call_status,\n                    'appointment_made?': this.state['appointment_made?'],\n                    'archive_lead?': this.state['archive_lead?']\n                })\n            }).then(resp => resp.json()).then(call => {\n                this.props.addNewCall(call)\n                this.setInitialState()\n                this.setState({ callsSubmitted: true  })\n                // used to archive lead\n                if (call['archive_lead?']) {\n                    fetch(leadUpdateApi + '/' + this.state.lead_id, {\n                        method: 'PATCH',\n                        headers: {\n                            'Content-type': 'application/json',\n                            Accepts: 'application/json'\n                        },\n                        body: JSON.stringify({\n                            id: this.state.lead_id,\n                            'lead_archived?': true\n                        })\n                    }).then(res => res.json()).then(lead => this.props.archiveLead(lead))\n                }\n            })\n\n        } else if (this.state['appointment_made?']) {\n            fetch(callsApi, {\n                method: 'POST',\n                headers: {\n                    \"Content-type\": 'application/json',\n                    Accepts: 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: this.state.user_id,\n                    lead_id: this.state.lead_id,\n                    call_status: this.state.call_status,\n                    'appointment_made?': this.state['appointment_made?'],\n                    'archive_lead?': this.state['archive_lead?']\n                })\n            }).then(resp => resp.json()).then(call => {\n                this.props.addNewCall(call)\n                this.setAppointmentState()\n                this.setState({ callId: call.id });\n            })    \n        }\n    }\n\n    onAppointmentSubmit = (e) => {\n        e.preventDefault()\n        let newStartTime = this.state.date + 'T' + this.state.start_time\n        let newEndTime = this.state.date + 'T' + this.state.end_time\n\n        fetch(appointmentsApi, {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n                Accepts: 'application/json'\n            },\n            body: JSON.stringify({\n                user_id: this.state.user_id,\n                lead_id: this.state.lead_id,\n                title: this.state.title,\n                date: this.state.date,\n                start_time: newStartTime,\n                end_time: newEndTime\n            })\n        }).then(res => res.json()).then(appointment => this.props.addNewAppointment(appointment))\n        this.setInitialState()\n    }\n\n    partialFormHandler = (e) => {\n        this.setState({ [e.target.name]: e.target.value  });\n    }\n\n    componentDidMount() {\n\n        let newState = (this.props.currentUser === null ? localStorage.user_id :this.props.currentUser.id )\n        // console.log(\"i am newstate:\",newState)\n        this.setState({ user_id: newState   });\n    }\n\n    \n\n    render() { \n        return ( \n            <div className=\"activity-show-page\">\n                <div className=\"lead-show-page\">\n                    <ShowLeadContainer lead={this.props.lead} onPhoneClick={this.onPhoneClick}/>\n                    <CallsContainer calls={this.props.calls} />\n                    <AppointmentsContainer \n                    clickedLeadAppointments={this.props.clickedLeadAppointments}\n                    onEditAppointmentClick={this.onEditAppointmentClick}/>\n                </div>\n\n                {/* call form is true and appointment form is false just show call form, if appointment \n                form is true upon submission, do not show the call form */}\n                {this.state.callForm  && !this.state.appointmentForm ? <CallForm calls={this.props.calls} \n                formData={this.state}\n                onToggleArchive={this.onToggleArchive}\n                onFormSubmission={this.onFormSubmission}\n                onToggleAppointment={this.onToggleAppointment}\n                onFormChange={this.onFormChange}/> : null }\n\n                {/* appointment form is true just show appoinment form} */}\n                {this.state.appointmentForm ? <AppointmentForm formData={this.state}\n                partialFormHandler={this.partialFormHandler}\n                \n                noAppUpdate={this.noAppUpdate}\n                onAppointmentSubmit={this.onAppointmentSubmit}\n                /> : null}\n\n                {/* edit appointment form */}\n                {this.state.editAppointment ? <AppointmentUpdateForm\n                editTheAppointment={this.props.editTheAppointment}\n                editAppointmentFormAfterSubmit={this.editAppointmentFormAfterSubmit}\n                clickedEditAppointment={this.state.clickedEditAppointment}\n                addSale={this.props.addSale}\n                addPastClient={this.props.addPastClient}\n                /> :null}\n\n                <div className=\"map-div\">\n                    <Map lead={this.props.lead} user={this.props.currentUser}/>\n                </div>\n            </div>\n            );\n        }\n    }\n    \n    export default LeadActivityContainer;"]},"metadata":{},"sourceType":"module"}