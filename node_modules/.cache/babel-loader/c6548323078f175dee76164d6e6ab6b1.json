{"ast":null,"code":"var _jsxFileName = \"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/containers/Metrics.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { Bar, Line, Pie } from 'react-chartjs-2';\n\nclass Metrics extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: this.props.currentUser,\n      currentDate: moment(),\n      appointmentDates: [],\n      filteredDatesByWeek: [],\n      daysofWeek: []\n    };\n\n    this.getDaysOfTheWeek = () => {\n      let beginningOfWeek = moment().startOf('week');\n      let daysOfWeek = []; //used knowledge of today's date and the start of the week to iterate days to the end of the week\n\n      daysOfWeek.push(beginningOfWeek.format('YYYY-MM-DD'));\n\n      for (let i = 1; i < 7; i++) {\n        daysOfWeek.push(beginningOfWeek.add(1, 'days').format('YYYY-MM-DD'));\n      }\n\n      return daysOfWeek;\n    };\n  }\n\n  componentDidMount() {\n    let newDates, filteredDatesByWeek; //take all appointments\n\n    newDates = this.props.currentUser.appointments.map(appointment => appointment.date); //take appointments and filter them by current week\n    //compare today's date with the array of appointments\n\n    filteredDatesByWeek = newDates.filter(date => moment(date).isSame(this.state.currentDate, 'week'));\n    this.setState({\n      appointmentDates: [...this.state.appointmentDates, newDates],\n      filteredDatesByWeek: [...this.state.filteredDatesByWeek, filteredDatesByWeek],\n      daysOfWeek: [...this.state.daysofWeek, this.getDaysOfTheWeek()]\n    });\n  }\n\n  render() {\n    console.log('i am the state ', this.state); // console.log(this.state.currentDate.toDate())\n\n    console.log(moment().isSame(moment('2019-12-23'), 'date')); // let beginningOfWeek = moment().startOf('week').add(6, 'days').toDate()\n    // let endOfWeek = moment().endOf('week').date()\n\n    console.log('i am the days of the week ', this.getDaysOfTheWeek());\n    return React.createElement(\"div\", {\n      className: \"metrics-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Metrics\"));\n  }\n\n}\n\nexport default Metrics;","map":{"version":3,"sources":["/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/containers/Metrics.js"],"names":["React","Component","moment","Bar","Line","Pie","Metrics","state","currentUser","props","currentDate","appointmentDates","filteredDatesByWeek","daysofWeek","getDaysOfTheWeek","beginningOfWeek","startOf","daysOfWeek","push","format","i","add","componentDidMount","newDates","appointments","map","appointment","date","filter","isSame","setState","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,QAA8B,iBAA9B;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BM,KAD4B,GACpB;AACJC,MAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWD,WADpB;AAEJE,MAAAA,WAAW,EAAER,MAAM,EAFf;AAGJS,MAAAA,gBAAgB,EAAE,EAHd;AAIJC,MAAAA,mBAAmB,EAAE,EAJjB;AAKJC,MAAAA,UAAU,EAAE;AALR,KADoB;;AAAA,SAwB5BC,gBAxB4B,GAwBT,MAAM;AACrB,UAAIC,eAAe,GAAGb,MAAM,GAAGc,OAAT,CAAiB,MAAjB,CAAtB;AACA,UAAIC,UAAU,GAAG,EAAjB,CAFqB,CAGrB;;AACAA,MAAAA,UAAU,CAACC,IAAX,CAAgBH,eAAe,CAACI,MAAhB,CAAuB,YAAvB,CAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBH,QAAAA,UAAU,CAACC,IAAX,CAAgBH,eAAe,CAACM,GAAhB,CAAoB,CAApB,EAAuB,MAAvB,EAA+BF,MAA/B,CAAsC,YAAtC,CAAhB;AACH;;AACD,aAAOF,UAAP;AACH,KAjC2B;AAAA;;AAS5BK,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,QAAJ,EAAcX,mBAAd,CADgB,CAEhB;;AACAW,IAAAA,QAAQ,GAAG,KAAKd,KAAL,CAAWD,WAAX,CAAuBgB,YAAvB,CAAoCC,GAApC,CAAwCC,WAAW,IAAIA,WAAW,CAACC,IAAnE,CAAX,CAHgB,CAIhB;AACA;;AACAf,IAAAA,mBAAmB,GAAGW,QAAQ,CAACK,MAAT,CAAgBD,IAAI,IAAIzB,MAAM,CAACyB,IAAD,CAAN,CAAaE,MAAb,CAAoB,KAAKtB,KAAL,CAAWG,WAA/B,EAA4C,MAA5C,CAAxB,CAAtB;AACA,SAAKoB,QAAL,CACI;AACInB,MAAAA,gBAAgB,EAAE,CAAC,GAAG,KAAKJ,KAAL,CAAWI,gBAAf,EAAiCY,QAAjC,CADtB;AAEIX,MAAAA,mBAAmB,EAAE,CAAC,GAAG,KAAKL,KAAL,CAAWK,mBAAf,EAAoCA,mBAApC,CAFzB;AAGIK,MAAAA,UAAU,EAAE,CAAC,GAAG,KAAKV,KAAL,CAAWM,UAAf,EAA2B,KAAKC,gBAAL,EAA3B;AAHhB,KADJ;AAMH;;AAcDiB,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8B,KAAK1B,KAAnC,EADK,CAEL;;AACAyB,IAAAA,OAAO,CAACC,GAAR,CAAY/B,MAAM,GAAG2B,MAAT,CAAgB3B,MAAM,CAAC,YAAD,CAAtB,EAAqC,MAArC,CAAZ,EAHK,CAIL;AACA;;AACA8B,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAAyC,KAAKnB,gBAAL,EAAzC;AAKA,WACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ;AAQH;;AAvD2B;;AA0DhC,eAAeR,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment'\nimport { Bar, Line, Pie} from 'react-chartjs-2'\n\nclass Metrics extends Component {\n    state = { \n        currentUser: this.props.currentUser,\n        currentDate: moment(),\n        appointmentDates: [],\n        filteredDatesByWeek: [],\n        daysofWeek: []\n    }\n\n    componentDidMount() {\n        let newDates, filteredDatesByWeek\n        //take all appointments\n        newDates = this.props.currentUser.appointments.map(appointment => appointment.date)\n        //take appointments and filter them by current week\n        //compare today's date with the array of appointments\n        filteredDatesByWeek = newDates.filter(date => moment(date).isSame(this.state.currentDate, 'week'))\n        this.setState(\n            { \n                appointmentDates: [...this.state.appointmentDates, newDates],\n                filteredDatesByWeek: [...this.state.filteredDatesByWeek, filteredDatesByWeek],\n                daysOfWeek: [...this.state.daysofWeek, this.getDaysOfTheWeek()]\n            })\n    }\n\n    getDaysOfTheWeek = () => {\n        let beginningOfWeek = moment().startOf('week')\n        let daysOfWeek = []\n        //used knowledge of today's date and the start of the week to iterate days to the end of the week\n        daysOfWeek.push(beginningOfWeek.format('YYYY-MM-DD'))\n        for (let i = 1; i < 7; i++) {\n            daysOfWeek.push(beginningOfWeek.add(1, 'days').format('YYYY-MM-DD'))\n        }\n        return daysOfWeek\n    }\n\n\n    render() {\n        console.log('i am the state ',this.state)\n        // console.log(this.state.currentDate.toDate())\n        console.log(moment().isSame(moment('2019-12-23'),'date'))\n        // let beginningOfWeek = moment().startOf('week').add(6, 'days').toDate()\n        // let endOfWeek = moment().endOf('week').date()\n        console.log('i am the days of the week ',this.getDaysOfTheWeek())\n\n\n       \n       \n        return ( \n            <div className=\"metrics-page\">\n                <h1>Metrics</h1>\n                {/* <Bar \n                    data={}\n                /> */}\n            </div>\n        );\n    }\n}\n\nexport default Metrics;"]},"metadata":{},"sourceType":"module"}