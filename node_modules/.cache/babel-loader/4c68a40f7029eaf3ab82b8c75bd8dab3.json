{"ast":null,"code":"import _objectSpread from \"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/containers/Map.js\";\nimport React, { Component, Fragment } from 'react';\nimport ReactMapGL, { Marker, FlyToInterpolator } from 'react-map-gl';\nimport WebMercatorViewport from 'viewport-mercator-project';\nconst TOKEN = process.env.REACT_APP_MAPBOX_TOKEN;\n\nclass Map extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      viewport: {\n        width: 700,\n        height: 250,\n        latitude: 40.7577,\n        longitude: -72.4376,\n        zoom: 12\n      }\n    };\n\n    this.getLeadLocation = () => {\n      this.setState({\n        viewport: _objectSpread({}, this.state.viewport, {\n          latitude: parseFloat(this.props.lead.latitude),\n          longitude: parseFloat(this.props.lead.longitude)\n        })\n      });\n    };\n\n    this._getPositions = () => {\n      const _fitBounds = new WebMercatorViewport(this.state.viewport).fitBounds([[parseFloat(this.props.lead.longitude), parseFloat(this.props.lead.latitude)], [parseFloat(this.props.user.longitude), parseFloat(this.props.user.latitude)]], {\n        padding: 15,\n        offset: [0, -20]\n      }),\n            longitude = _fitBounds.longitude,\n            latitude = _fitBounds.latitude,\n            zoom = _fitBounds.zoom;\n\n      const viewport = _objectSpread({}, this.state.viewport, {\n        longitude,\n        latitude,\n        zoom,\n        transitionDuration: 3000,\n        transitionInterpolator: new FlyToInterpolator()\n      });\n\n      this.setState({\n        viewport\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getLeadLocation();\n  }\n\n  render() {\n    // console.log(this.props.lead.latitude)\n    // console.log(this.props.lead.longitude)\n    // console.log(this.state)\n    return React.createElement(ReactMapGL, Object.assign({\n      mapboxApiAccessToken: TOKEN,\n      mapStyle: \"mapbox://styles/mapbox/navigation-guidance-day-v4\"\n    }, this.state.viewport, {\n      onViewportChange: viewport => this.setState({\n        viewport\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this._getPositions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Get Positions\"), React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      latitude: parseFloat(this.props.lead.latitude),\n      longitude: parseFloat(this.props.lead.longitude),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"x\"), React.createElement(Marker, {\n      latitude: parseFloat(this.props.user.latitude),\n      longitude: parseFloat(this.props.user.longitude),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"y\")));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/containers/Map.js"],"names":["React","Component","Fragment","ReactMapGL","Marker","FlyToInterpolator","WebMercatorViewport","TOKEN","process","env","REACT_APP_MAPBOX_TOKEN","Map","state","viewport","width","height","latitude","longitude","zoom","getLeadLocation","setState","parseFloat","props","lead","_getPositions","fitBounds","user","padding","offset","transitionDuration","transitionInterpolator","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport ReactMapGL, {Marker,  FlyToInterpolator} from 'react-map-gl'\nimport WebMercatorViewport from 'viewport-mercator-project';\n\n\n\nconst TOKEN = process.env.REACT_APP_MAPBOX_TOKEN\n\nclass Map extends Component {\n\n    state = { \n        viewport: {\n            width: 700,\n            height: 250,\n            latitude: 40.7577,\n            longitude: -72.4376,\n            zoom: 12\n        }\n    }\n     \n    componentDidMount() {\n        this.getLeadLocation()\n    }\n\n    getLeadLocation = () => {\n        this.setState(\n            {   \n                viewport: {...this.state.viewport, latitude: parseFloat(this.props.lead.latitude), longitude: parseFloat(this.props.lead.longitude)}\n            })\n    }\n\n     _getPositions = () => {\n        const {longitude, latitude, zoom} = new WebMercatorViewport(this.state.viewport)\n        .fitBounds([[parseFloat(this.props.lead.longitude), parseFloat(this.props.lead.latitude)], [parseFloat(this.props.user.longitude), parseFloat(this.props.user.latitude)]],{\n            padding: 15,\n            offset: [0, -20]\n          })\n        const viewport = {\n            ...this.state.viewport,\n            longitude,\n            latitude,\n            zoom,\n            transitionDuration: 3000,\n            transitionInterpolator: new FlyToInterpolator(),\n            \n        }\n        this.setState({viewport})\n     }\n    \n    \n    \n    render() { \n        // console.log(this.props.lead.latitude)\n        // console.log(this.props.lead.longitude)\n        // console.log(this.state)\n       \n        \n        return ( \n                <ReactMapGL\n                    mapboxApiAccessToken={TOKEN}\n                    mapStyle='mapbox://styles/mapbox/navigation-guidance-day-v4'\n                    {...this.state.viewport}\n                    onViewportChange={(viewport) => this.setState({viewport})}\n                    >\n                        <button onClick={this._getPositions}>Get Positions</button>\n                        <Fragment>\n                            <Marker latitude={parseFloat(this.props.lead.latitude)} longitude={parseFloat(this.props.lead.longitude)}>\n                                x\n                            </Marker>\n                             <Marker latitude={parseFloat(this.props.user.latitude)} longitude={parseFloat(this.props.user.longitude)}>\n                            y\n                            </Marker>\n                        </Fragment>     \n\n                </ReactMapGL>\n        \n         )\n    }\n}\n \nexport default Map;"]},"metadata":{},"sourceType":"module"}