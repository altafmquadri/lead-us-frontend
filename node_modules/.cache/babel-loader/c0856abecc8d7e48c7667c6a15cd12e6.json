{"ast":null,"code":"var _jsxFileName = \"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/components/LoginForm.js\";\nimport React from 'react';\nimport './LoginForm.css';\nconst api = 'http://localhost:3000/api/v1/login';\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      latitude: 0.0,\n      longitude: 0.0\n    };\n\n    this.formHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      }, () => this.getMyLocation);\n    };\n\n    this.loginFormSubmission = e => {\n      e.preventDefault();\n      fetch(api, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Accepts: 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      }).then(res => res.json()).then(user => {\n        if (user.errors) {\n          alert(user.errors);\n        } else {\n          //console.log(user.leads)\n          this.props.setCurrentUser(user);\n        }\n      });\n    };\n\n    this.getMyLocation = () => {\n      const options = {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n      };\n\n      const success = position => {\n        const coordinateObj = position.coords;\n        this.setState({\n          latitude: coordinateObj.latitude,\n          longitude: coordinateObj.longitude\n        });\n      };\n\n      const error = err => {\n        console.warn(`ERROR'(${err.code})): ${err.message}`);\n      };\n\n      navigator.geolocation.getCurrentPosition(success, error, options);\n    };\n  }\n\n  componentDidMount() {\n    this.getMyLocation();\n  }\n\n  render() {\n    // console.log(this.state)\n    return React.createElement(\"div\", {\n      className: \"login-form-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.loginFormSubmission,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Username:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.formHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"label-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(\"input\", {\n      type: \"password\",\n      value: this.state.password,\n      onChange: this.formHandler,\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/components/LoginForm.js"],"names":["React","api","LoginForm","Component","state","username","password","latitude","longitude","formHandler","e","setState","target","name","value","getMyLocation","loginFormSubmission","preventDefault","fetch","method","headers","Accepts","body","JSON","stringify","then","res","json","user","errors","alert","props","setCurrentUser","options","enableHighAccuracy","timeout","maximumAge","success","position","coordinateObj","coords","error","err","console","warn","code","message","navigator","geolocation","getCurrentPosition","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './LoginForm.css'\n\nconst api = 'http://localhost:3000/api/v1/login'\n\nclass LoginForm extends React.Component {\n\n    state = { \n        username: \"\",\n        password: \"\",\n        latitude: 0.0,\n        longitude: 0.0\n    }\n\n    formHandler = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, () => this.getMyLocation)\n    }\n\n    loginFormSubmission = (e) => {\n        e.preventDefault()\n        \n        fetch(api, {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n                Accepts: 'application/json'\n            },\n            body: JSON.stringify(this.state)\n        }).then(res => res.json()).then(user => {\n            if (user.errors) {\n                alert(user.errors)\n            } else {\n                //console.log(user.leads)\n                this.props.setCurrentUser(user)\n            }\n        })   \n    }\n\n    componentDidMount() {\n        this.getMyLocation()\n    }\n\n    getMyLocation = () => {\n        const options = {\n            enableHighAccuracy: true,\n            timeout: 5000,\n            maximumAge:0\n        }\n        const success = (position) => {\n            const coordinateObj = position.coords\n            this.setState(\n                { \n                    latitude: coordinateObj.latitude,  \n                    longitude: coordinateObj.longitude\n                })\n        }\n        const error = (err) => {\n            console.warn(`ERROR'(${err.code})): ${err.message}`)\n        }\n\n        navigator.geolocation.getCurrentPosition(success, error, options)\n    }\n    \n    \n    render() { \n        // console.log(this.state)\n        return ( \n            <div className=\"login-form-div\">\n                <form\n                onSubmit={this.loginFormSubmission} \n                className=\"login-form\">\n\n                <div className=\"label-input\"> \n                    <label>Username:</label>\n                        <input type=\"text\" \n                        name=\"username\"\n                        value={this.state.username}\n                        onChange={this.formHandler}\n                        />\n                </div>        \n            <div className=\"label-input\"> \n                    <label>Password:</label>             \n                        <input type=\"password\"\n                        value={this.state.password}\n                        onChange={this.formHandler}\n                        name=\"password\" />\n                </div>\n\n                <input type=\"submit\" value=\"Submit\" />  \n                </form>\n            </div>\n        );\n    }\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}