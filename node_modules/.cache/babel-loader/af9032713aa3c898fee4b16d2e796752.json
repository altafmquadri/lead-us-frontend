{"ast":null,"code":"var _jsxFileName = \"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/containers/Metrics.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\n\nclass Metrics extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: this.props.currentUser,\n      currentDate: moment(),\n      appointmentDates: [],\n      filteredDatesByWeek: []\n    };\n\n    this.getDaysOfTheWeek = () => {\n      let beginningOfWeek = moment().startOf('week'); // let endOfWeek = moment().endOf('week')\n\n      let daysOfWeek = [];\n      daysOfWeek.push(beginningOfWeek.format('YYYY-MM-DD'));\n\n      for (let i = 1; i < 7; i++) {\n        daysOfWeek.push(beginningOfWeek.add(1, 'days').format('YYYY-MM-DD'));\n      }\n\n      return daysOfWeek;\n    };\n  }\n\n  componentDidMount() {\n    let newDates, filteredDatesByWeek;\n    newDates = this.props.currentUser.appointments.map(appointment => appointment.date);\n    filteredDatesByWeek = newDates.filter(date => moment(date).isSame(this.state.currentDate, 'week'));\n    this.setState({\n      appointmentDates: [...this.state.appointmentDates, newDates],\n      filteredDatesByWeek: [...this.state.filteredDatesByWeek, filteredDatesByWeek]\n    });\n  }\n\n  render() {\n    console.log(this.state); // console.log(this.state.currentDate.toDate())\n\n    console.log(moment().isSame(moment('2019-12-23'), 'date')); // let beginningOfWeek = moment().startOf('week').add(6, 'days').toDate()\n    // let endOfWeek = moment().endOf('week').date()\n    // console.log(this.getDaysOfTheWeek())\n\n    return React.createElement(\"div\", {\n      className: \"metrics-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Metrics\"));\n  }\n\n}\n\nexport default Metrics;","map":{"version":3,"sources":["/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/containers/Metrics.js"],"names":["React","Component","moment","Metrics","state","currentUser","props","currentDate","appointmentDates","filteredDatesByWeek","getDaysOfTheWeek","beginningOfWeek","startOf","daysOfWeek","push","format","i","add","componentDidMount","newDates","appointments","map","appointment","date","filter","isSame","setState","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BG,KAD4B,GACpB;AACJC,MAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWD,WADpB;AAEJE,MAAAA,WAAW,EAAEL,MAAM,EAFf;AAGJM,MAAAA,gBAAgB,EAAE,EAHd;AAIJC,MAAAA,mBAAmB,EAAE;AAJjB,KADoB;;AAAA,SAmB5BC,gBAnB4B,GAmBT,MAAM;AACrB,UAAIC,eAAe,GAAGT,MAAM,GAAGU,OAAT,CAAiB,MAAjB,CAAtB,CADqB,CAErB;;AACA,UAAIC,UAAU,GAAG,EAAjB;AAEAA,MAAAA,UAAU,CAACC,IAAX,CAAgBH,eAAe,CAACI,MAAhB,CAAuB,YAAvB,CAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBH,QAAAA,UAAU,CAACC,IAAX,CAAgBH,eAAe,CAACM,GAAhB,CAAoB,CAApB,EAAuB,MAAvB,EAA+BF,MAA/B,CAAsC,YAAtC,CAAhB;AACH;;AACD,aAAOF,UAAP;AACH,KA7B2B;AAAA;;AAQ5BK,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,QAAJ,EAAcV,mBAAd;AACAU,IAAAA,QAAQ,GAAG,KAAKb,KAAL,CAAWD,WAAX,CAAuBe,YAAvB,CAAoCC,GAApC,CAAwCC,WAAW,IAAIA,WAAW,CAACC,IAAnE,CAAX;AACAd,IAAAA,mBAAmB,GAAGU,QAAQ,CAACK,MAAT,CAAgBD,IAAI,IAAIrB,MAAM,CAACqB,IAAD,CAAN,CAAaE,MAAb,CAAoB,KAAKrB,KAAL,CAAWG,WAA/B,EAA4C,MAA5C,CAAxB,CAAtB;AACA,SAAKmB,QAAL,CACI;AACIlB,MAAAA,gBAAgB,EAAE,CAAC,GAAG,KAAKJ,KAAL,CAAWI,gBAAf,EAAiCW,QAAjC,CADtB;AAEIV,MAAAA,mBAAmB,EAAE,CAAC,GAAG,KAAKL,KAAL,CAAWK,mBAAf,EAAoCA,mBAApC;AAFzB,KADJ;AAKH;;AAeDkB,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzB,KAAjB,EADK,CAEL;;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAY3B,MAAM,GAAGuB,MAAT,CAAgBvB,MAAM,CAAC,YAAD,CAAtB,EAAqC,MAArC,CAAZ,EAHK,CAIL;AACA;AACA;;AAKA,WACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ;AAKH;;AAhD2B;;AAmDhC,eAAeC,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment'\n\nclass Metrics extends Component {\n    state = { \n        currentUser: this.props.currentUser,\n        currentDate: moment(),\n        appointmentDates: [],\n        filteredDatesByWeek: []\n    }\n\n    componentDidMount() {\n        let newDates, filteredDatesByWeek\n        newDates = this.props.currentUser.appointments.map(appointment => appointment.date)\n        filteredDatesByWeek = newDates.filter(date => moment(date).isSame(this.state.currentDate, 'week'))\n        this.setState(\n            { \n                appointmentDates: [...this.state.appointmentDates, newDates],\n                filteredDatesByWeek: [...this.state.filteredDatesByWeek, filteredDatesByWeek]\n            })\n    }\n\n    getDaysOfTheWeek = () => {\n        let beginningOfWeek = moment().startOf('week')\n        // let endOfWeek = moment().endOf('week')\n        let daysOfWeek = []\n\n        daysOfWeek.push(beginningOfWeek.format('YYYY-MM-DD'))\n        for (let i = 1; i < 7; i++) {\n            daysOfWeek.push(beginningOfWeek.add(1, 'days').format('YYYY-MM-DD'))\n        }\n        return daysOfWeek\n    }\n\n\n    render() {\n        console.log(this.state)\n        // console.log(this.state.currentDate.toDate())\n        console.log(moment().isSame(moment('2019-12-23'),'date'))\n        // let beginningOfWeek = moment().startOf('week').add(6, 'days').toDate()\n        // let endOfWeek = moment().endOf('week').date()\n        // console.log(this.getDaysOfTheWeek())\n\n\n       \n       \n        return ( \n            <div className=\"metrics-page\">\n                <h1>Metrics</h1>\n            </div>\n        );\n    }\n}\n\nexport default Metrics;"]},"metadata":{},"sourceType":"module"}