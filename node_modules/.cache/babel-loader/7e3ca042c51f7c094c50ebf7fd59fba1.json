{"ast":null,"code":"var _jsxFileName = \"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/components/AppointmentCalendar.js\";\nimport React from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nconst localizer = momentLocalizer(moment);\n\nconst renderMyAppointments = props => {\n  if (props.appointments === undefined || props.appointments === null) return;\n  return props.appointments.map(event => ({\n    title: event.title,\n    start: new Date(new Date(event.start_time).getFullYear(), new Date(event.start_time).getMonth(), new Date(event.start_time).getDate(), new Date(event.start_time).getHours(), new Date(event.start_time).getMinutes()),\n    end: new Date(new Date(event.end_time).getFullYear(), new Date(event.end_time).getMonth(), new Date(event.end_time).getDate(), new Date(event.end_time).getHours(), new Date(event.end_time).getMinutes())\n  }));\n};\n\nconst AppointmentCalendar = props => React.createElement(\"div\", {\n  style: {\n    height: \"55vh\",\n    width: \"69vw\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, console.log(props.appointments), React.createElement(Calendar, {\n  localizer: localizer,\n  events: renderMyAppointments(props),\n  startAccessor: \"start\",\n  endAccessor: \"end\" // onSelectEvent={e => alert(e.title)}\n  ,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}));\n\nexport default AppointmentCalendar;","map":{"version":3,"sources":["/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/components/AppointmentCalendar.js"],"names":["React","Calendar","momentLocalizer","moment","localizer","renderMyAppointments","props","appointments","undefined","map","event","title","start","Date","start_time","getFullYear","getMonth","getDate","getHours","getMinutes","end","end_time","AppointmentCalendar","height","width","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,eAAlB,QAAwC,oBAAxC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,mDAAP;AACA,MAAMC,SAAS,GAAGF,eAAe,CAACC,MAAD,CAAjC;;AAEA,MAAME,oBAAoB,GAAIC,KAAD,IAAW;AAEpC,MAAIA,KAAK,CAACC,YAAN,KAAuBC,SAAvB,IAAoCF,KAAK,CAACC,YAAN,KAAuB,IAA/D,EAAqE;AAErE,SAAOD,KAAK,CAACC,YAAN,CAAmBE,GAAnB,CAAuBC,KAAK,KACjC;AACEC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADf;AAEEC,IAAAA,KAAK,EAAE,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,CAASH,KAAK,CAACI,UAAf,EAA2BC,WAA3B,EAAT,EAAmD,IAAIF,IAAJ,CAASH,KAAK,CAACI,UAAf,EAA2BE,QAA3B,EAAnD,EAA0F,IAAIH,IAAJ,CAASH,KAAK,CAACI,UAAf,EAA2BG,OAA3B,EAA1F,EAAgI,IAAIJ,IAAJ,CAASH,KAAK,CAACI,UAAf,EAA2BI,QAA3B,EAAhI,EAAuK,IAAIL,IAAJ,CAASH,KAAK,CAACI,UAAf,EAA2BK,UAA3B,EAAvK,CAFT;AAGEC,IAAAA,GAAG,EAAE,IAAIP,IAAJ,CAAU,IAAIA,IAAJ,CAASH,KAAK,CAACW,QAAf,EAAyBN,WAAzB,EAAV,EAAkD,IAAIF,IAAJ,CAASH,KAAK,CAACW,QAAf,EAAyBL,QAAzB,EAAlD,EAAuF,IAAIH,IAAJ,CAASH,KAAK,CAACW,QAAf,EAAyBJ,OAAzB,EAAvF,EAA2H,IAAIJ,IAAJ,CAAkBH,KAAK,CAACW,QAAxB,EAAkCH,QAAlC,EAA3H,EAAyK,IAAIL,IAAJ,CAASH,KAAK,CAACW,QAAf,EAAyBF,UAAzB,EAAzK;AAHP,GADiC,CAA5B,CAAP;AAMD,CAVH;;AAYE,MAAMG,mBAAmB,GAAGhB,KAAK,IAE/B;AAAK,EAAA,KAAK,EAAE;AAACiB,IAAAA,MAAM,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAC;AAAvB,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKC,OAAO,CAACC,GAAR,CAAYpB,KAAK,CAACC,YAAlB,CADL,EAGE,oBAAC,QAAD;AACE,EAAA,SAAS,EAAEH,SADb;AAEE,EAAA,MAAM,EAAEC,oBAAoB,CAACC,KAAD,CAF9B;AAGE,EAAA,aAAa,EAAC,OAHhB;AAIE,EAAA,WAAW,EAAC,KAJd,CAKE;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,CAFF;;AAgBA,eAAegB,mBAAf","sourcesContent":["import React from 'react';\nimport {Calendar, momentLocalizer} from 'react-big-calendar'\nimport moment from 'moment'\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nconst localizer = momentLocalizer(moment)\n\nconst renderMyAppointments = (props) => {\n\n    if (props.appointments === undefined || props.appointments === null) return\n\n    return props.appointments.map(event => (\n      {\n        title: event.title,\n        start: new Date(new Date(event.start_time).getFullYear(), new Date(event.start_time).getMonth(), new Date(event.start_time).getDate(), new Date(event.start_time).getHours(), new Date(event.start_time).getMinutes()),\n        end: new Date( new Date(event.end_time).getFullYear(), new Date(event.end_time).getMonth(), new Date(event.end_time).getDate(), new Date         (event.end_time).getHours(), new Date(event.end_time).getMinutes())\n    }))\n  }\n  \n  const AppointmentCalendar = props => (  \n\n    <div style={{height: \"55vh\", width:\"69vw\"}}>\n        {console.log(props.appointments)}\n\n      <Calendar\n        localizer={localizer}\n        events={renderMyAppointments(props)}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        // onSelectEvent={e => alert(e.title)}\n        /> \n    </div>\n    \n  )\n  \n  export default AppointmentCalendar;"]},"metadata":{},"sourceType":"module"}