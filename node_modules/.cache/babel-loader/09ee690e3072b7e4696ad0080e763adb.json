{"ast":null,"code":"import _objectSpread from \"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/App.js\";\nimport React from 'react';\nimport Navbar from './components/Navbar';\nimport MainContainer from './containers/MainContainer';\nimport NewLeadContainer from './containers/NewLeadContainer';\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport LeadActivityContainer from './containers/LeadActivityContainer';\nimport SignupForm from './components/SignupForm';\nimport LoginForm from './components/LoginForm';\nconst api = 'http://localhost:3000/api/v1/users';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      currentUser: null,\n      leads: [],\n      appointments: [],\n      calls: [],\n      clickedLead: [],\n      clickedLeadCalls: [],\n      clickedLeadAppointments: [],\n      loading: true\n    };\n\n    this.setCurrentUser = user => {\n      this.setState({\n        currentUser: user\n      });\n    };\n\n    this.findLeadName = id => {\n      let name;\n      let lead = this.state.leads.find(lead => lead.id === id);\n      name = `${lead.first_name} ${lead.last_name}`;\n      return name;\n    };\n\n    this.addNewLead = newLead => {\n      this.setState(_objectSpread({}, this.state, {\n        leads: [...this.state.leads, newLead]\n      }));\n    };\n\n    this.addNewCall = newCall => {\n      this.setState(_objectSpread({}, this.state, {\n        calls: [...this.state.calls, newCall],\n        clickedLeadCalls: [...this.state.clickedLeadCalls, newCall]\n      }));\n    };\n\n    this.addNewAppointment = newAppointment => {\n      this.setState(_objectSpread({}, this.state, {\n        appointments: [...this.state.appointments, newAppointment],\n        clickedLeadAppointments: [...this.state.clickedLeadAppointments, newAppointment]\n      }));\n    };\n\n    this.editCallNoApp = call => {\n      this.setState(_objectSpread({}, this.state, {\n        calls: [...this.state.calls.map(stateCall => {\n          if (stateCall.id === call.id) {\n            return call;\n          } else {\n            return stateCall;\n          }\n        })],\n        clickedLeadCalls: [...this.state.clickedLeadCalls.map(stateCall => {\n          if (stateCall.id === call.id) {\n            return call;\n          } else {\n            return stateCall;\n          }\n        })]\n      }));\n    };\n\n    this.onLeadClick = leadData => {\n      //  console.log(\"i am the clicked lead\", leadData.lead)\n      this.setState({\n        clickedLead: leadData.lead,\n        clickedLeadCalls: this.state.calls.filter(calls => calls.lead_id === leadData.lead.id),\n        clickedLeadAppointments: this.state.appointments.filter(appointments => appointments.lead_id === leadData.lead.id)\n      }, () => {\n        this.props.history.push(`/leads/${leadData.lead.id}`);\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.currentUser) {\n      this.props.history.push('/login');\n    }\n\n    return fetch(api).then(res => res.json()).then(res => this.setState({\n      // users: res.users,\n      // currentUser: res.users[0], //will have to implement some logic to get the current user  \n      //leads: currentUser.leads,\n      // appointments: res.users[0].appointments,\n      // calls: res.users[0].calls,\n      //leads: this.state.currentUser ? this.state.currentUser.leads : [],\n      //appointments: this.state.currentUser ? this.state.currentUser.appointments : null,\n      //calls: this.state.currentUser ? this.state.currentUser.calls : null,\n      clickedLead: [],\n      clickedLeadCalls: [],\n      clickedLeadAppointments: [],\n      loading: false //added for purpose of establishing dynamic routes\n\n    }));\n  } //  componentDidUpdate(prevState) {\n  //    console.log(this.state.currentUser !== prevState.currentUser)\n  //   if (this.state.currentUser !== prevState.currentUser) {\n  //     this.setState({ leads: this.state.currentUser.leads  });\n  //   }\n  //  }\n  //to point us to the lead show page\n\n\n  render() {\n    // console.log(\"i am clicked lead calls\",this.state.clickedLeadCalls)\n    console.log(this.state.currentUser); // console.log(this.state.currentUser.leads)\n    // <Redirect from='/' to='/login'/>\n\n    if (this.state.loading) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"main-page-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"}\", React.createElement(Route, {\n      path: \"/leads/:id\",\n      render: routerProps => React.createElement(LeadActivityContainer, Object.assign({\n        currentUser: this.state.currentUser,\n        lead: this.state.clickedLead,\n        calls: this.state.clickedLeadCalls,\n        clickedLeadAppointments: this.state.clickedLeadAppointments,\n        addNewCall: this.addNewCall,\n        addNewAppointment: this.addNewAppointment,\n        editCallNoApp: this.editCallNoApp\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/new\",\n      render: routerProps => React.createElement(NewLeadContainer, Object.assign({\n        currentUser: this.state.currentUser,\n        addNewLead: this.addNewLead\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      render: routerProps => React.createElement(SignupForm, Object.assign({}, routerProps, {\n        setCurrentUser: this.setCurrentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      render: routerProps => React.createElement(LoginForm, Object.assign({}, routerProps, {\n        setCurrentUser: this.setCurrentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: routerProps => React.createElement(MainContainer, Object.assign({\n        leads: this.state.leads,\n        onLeadClick: this.onLeadClick,\n        currentUser: this.state.currentUser,\n        appointments: this.state.appointments,\n        findLeadName: this.findLeadName\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/App.js"],"names":["React","Navbar","MainContainer","NewLeadContainer","Switch","Route","withRouter","LeadActivityContainer","SignupForm","LoginForm","api","App","Component","state","users","currentUser","leads","appointments","calls","clickedLead","clickedLeadCalls","clickedLeadAppointments","loading","setCurrentUser","user","setState","findLeadName","id","name","lead","find","first_name","last_name","addNewLead","newLead","addNewCall","newCall","addNewAppointment","newAppointment","editCallNoApp","call","map","stateCall","onLeadClick","leadData","filter","lead_id","props","history","push","componentDidMount","fetch","then","res","json","render","console","log","routerProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Navbar from './components/Navbar'\nimport MainContainer from './containers/MainContainer';\nimport NewLeadContainer from './containers/NewLeadContainer';\n\nimport {Switch, Route, withRouter } from \"react-router-dom\";\nimport LeadActivityContainer from './containers/LeadActivityContainer';\nimport SignupForm from './components/SignupForm';\nimport LoginForm from './components/LoginForm'\n\nconst api = 'http://localhost:3000/api/v1/users'\n\nclass App extends React.Component {\n\n  state = { \n    users: [],\n    currentUser: null,\n    leads: [],\n    appointments: [],\n    calls: [],\n    clickedLead: [],\n    clickedLeadCalls: [],\n    clickedLeadAppointments: [],\n    loading: true\n }\n\n setCurrentUser = (user) => {\n   this.setState(\n     { \n       currentUser: user });\n }\n\n findLeadName = (id) => {\n   let name\n   let lead = this.state.leads.find(lead => lead.id === id)\n   name = `${lead.first_name} ${lead.last_name}`\n   return name\n }\n\n //triggered by new lead form\n addNewLead = (newLead) => {\n    this.setState (\n      {\n        ...this.state, \n        leads:  [...this.state.leads, newLead]\n        \n      }) \n }\n\n addNewCall = (newCall) => {\n   this.setState(\n     {\n       ...this.state,\n       calls: [...this.state.calls, newCall],\n       clickedLeadCalls: [...this.state.clickedLeadCalls, newCall]  \n    });\n }\n\n addNewAppointment = (newAppointment) => {\n  this.setState(\n    {\n      ...this.state,\n      appointments: [...this.state.appointments, newAppointment],\n      clickedLeadAppointments: [...this.state.clickedLeadAppointments, newAppointment]  \n   });\n }\n\n //written for the cancel button on appointment form\n editCallNoApp = (call) => {\n   this.setState(\n     { \n        ...this.state,\n        calls: [...this.state.calls.map(stateCall => {\n            if (stateCall.id === call.id) {\n              return call\n            } else {\n              return stateCall\n            }\n        })],  \n        clickedLeadCalls: [...this.state.clickedLeadCalls.map(stateCall => {\n          if (stateCall.id === call.id) {\n            return call\n          } else {\n            return stateCall\n          }\n      })]\n    });\n }\n\n componentDidMount() {\n  if (!this.state.currentUser) {\n    this.props.history.push('/login')\n  }\n     return fetch(api).then(res => res.json()).then(res => this.setState(\n         { \n            // users: res.users,\n            // currentUser: res.users[0], //will have to implement some logic to get the current user  \n             //leads: currentUser.leads,\n            // appointments: res.users[0].appointments,\n            // calls: res.users[0].calls,\n            //leads: this.state.currentUser ? this.state.currentUser.leads : [],\n            //appointments: this.state.currentUser ? this.state.currentUser.appointments : null,\n            //calls: this.state.currentUser ? this.state.currentUser.calls : null,\n            clickedLead: [],\n            clickedLeadCalls: [],\n            clickedLeadAppointments: [],\n            loading: false //added for purpose of establishing dynamic routes\n        }))    \n }\n\n//  componentDidUpdate(prevState) {\n//    console.log(this.state.currentUser !== prevState.currentUser)\n//   if (this.state.currentUser !== prevState.currentUser) {\n//     this.setState({ leads: this.state.currentUser.leads  });\n//   }\n   \n//  }\n\n\n\n\n //to point us to the lead show page\n onLeadClick = (leadData) => {\n  //  console.log(\"i am the clicked lead\", leadData.lead)\n   this.setState(\n     { \n       clickedLead: leadData.lead,\n       clickedLeadCalls: this.state.calls.filter(calls => calls.lead_id === leadData.lead.id), \n       clickedLeadAppointments: this.state.appointments.filter(appointments => appointments.lead_id === leadData.lead.id)\n      }, () => {\n     this.props.history.push(`/leads/${leadData.lead.id}`)\n   }) \n }\n\n  render() {\n    // console.log(\"i am clicked lead calls\",this.state.clickedLeadCalls)\n    console.log(this.state.currentUser)\n    // console.log(this.state.currentUser.leads)\n\n    \n      // <Redirect from='/' to='/login'/>\n    \n\n    if (this.state.loading) {\n      return <h1>Loading...</h1>\n    }\n\n    return (\n      <div className=\"main-page-container\">\n          <div>\n              <Navbar />\n              <Switch>\n              \n  }\n                <Route path=\"/leads/:id\" render={(routerProps) => <LeadActivityContainer \n                currentUser={this.state.currentUser}\n                lead={this.state.clickedLead}\n                calls={this.state.clickedLeadCalls}\n                clickedLeadAppointments={this.state.clickedLeadAppointments}\n                addNewCall={this.addNewCall}\n                addNewAppointment={this.addNewAppointment}\n                editCallNoApp={this.editCallNoApp}\n                {...routerProps}/> }></Route>\n\n                <Route path=\"/new\" render={(routerProps) => <NewLeadContainer\n                currentUser={this.state.currentUser} \n                addNewLead={this.addNewLead} \n                {...routerProps}/>}></Route> \n\n                <Route path=\"/signup\" render={(routerProps) => <SignupForm {...routerProps} setCurrentUser={this.setCurrentUser}/>}></Route>\n\n                <Route path=\"/login\" render={(routerProps) => <LoginForm {...routerProps} setCurrentUser={this.setCurrentUser}/>}></Route>\n\n                <Route exact path=\"/\" render={(routerProps) =>  <MainContainer \n                leads={this.state.leads} onLeadClick={this.onLeadClick} currentUser={this.state.currentUser}\n                appointments={this.state.appointments} findLeadName={this.findLeadName}\n                {...routerProps}/>}></Route>\n\n              </Switch>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}