{"ast":null,"code":"var _jsxFileName = \"/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/containers/WeeklyProduction.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport { Polar } from 'react-chartjs-2';\n\nclass WeeklyProduction extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // currentDate: moment(),\n      // currentUser: this.props.currentUser,\n      // appointments: this.props.appointments,\n      weekAppointments: [],\n      presentations: [],\n      weeklySales: [],\n      polarChartData: {}\n    };\n\n    this.setPolarChartData = () => {\n      const polarChartData = {\n        labels: ['Appointments', 'Presentations', 'Sales'],\n        datasets: [{\n          label: `$Weekly Presentation`,\n          data: [this.state.weekAppointments.length, this.state.presentations.length, this.state.weeklySales.length],\n          backgroundColor: ['rgba(153, 102, 255, 0.2)', 'rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)'],\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)'],\n          borderWidth: 1\n        }]\n      };\n      return polarChartData;\n    };\n\n    this.getWeeklyPresentations = () => {\n      let filteredAppointmentsByWeek = this.state.appointments.filter(appointment => moment(appointment.date).isSame(this.state.currentDate, 'week'));\n      let salesonWeeklyAppointments = filteredAppointmentsByWeek.filter(appointment => appointment['made_sale?']);\n      this.setState({\n        weekAppointments: filteredAppointmentsByWeek,\n        weeklySales: salesonWeeklyAppointments\n      }, () => this.setState({\n        polarChartData: this.setPolarChartData()\n      }));\n      let presentationAppointments = filteredAppointmentsByWeek.filter(appointment => appointment['presentation_made?']);\n      return presentationAppointments;\n    };\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.currentUser !== this.props.currentUser) {\n      this.setState({\n        currentUser: this.props.currentUser,\n        appointments: this.props.appointments\n      }, () => this.setState({\n        presentations: this.getWeeklyPresentations()\n      }));\n    }\n  }\n\n  render() {\n    // console.log('i am props', this.props)\n    // console.log('i am state',this.state)\n    // console.log('filterAppp' , this.getWeeklyPresentations())\n    return React.createElement(\"div\", {\n      className: \"weekly-presentation-metric\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Weekly Production\"), React.createElement(Polar, {\n      data: this.state.polarChartData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default WeeklyProduction;","map":{"version":3,"sources":["/Users/altafquadri/Development/code/Mod5Project/Frontend/lead-us-react/src/containers/WeeklyProduction.js"],"names":["React","moment","Polar","WeeklyProduction","Component","state","weekAppointments","presentations","weeklySales","polarChartData","setPolarChartData","labels","datasets","label","data","length","backgroundColor","borderColor","borderWidth","getWeeklyPresentations","filteredAppointmentsByWeek","appointments","filter","appointment","date","isSame","currentDate","salesonWeeklyAppointments","setState","presentationAppointments","componentDidUpdate","prevState","currentUser","props","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment'\nimport { Polar } from 'react-chartjs-2'\n\nclass WeeklyProduction extends React.Component {\n\n    state = { \n        // currentDate: moment(),\n        // currentUser: this.props.currentUser,\n        // appointments: this.props.appointments,\n        weekAppointments: [],\n        presentations: [],\n        weeklySales: [],\n        polarChartData: {}\n    }\n\n    setPolarChartData = () => {\n        const polarChartData = {\n            labels: ['Appointments', 'Presentations', 'Sales'],\n            datasets: [\n                {\n                    label: `$Weekly Presentation`,\n                    data: [this.state.weekAppointments.length, this.state.presentations.length, this.state.weeklySales.length],\n                    backgroundColor: [\n                        'rgba(153, 102, 255, 0.2)',\n                        'rgba(255, 99, 132, 0.2)',\n                        'rgba(54, 162, 235, 0.2)',\n                        'rgba(255, 206, 86, 0.2)',\n                        'rgba(75, 192, 192, 0.2)'\n                    ],\n                    borderColor: [\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(153, 102, 255, 1)'\n                    ],\n                    borderWidth: 1\n                }]\n        }\n        return polarChartData\n    }\n\n    \n\n    componentDidUpdate(prevState){\n        if (prevState.currentUser !== this.props.currentUser) {\n            this.setState(\n                { \n                    currentUser: this.props.currentUser,\n                    appointments: this.props.appointments,\n                     \n            }, () => this.setState({ presentations: this.getWeeklyPresentations() }))\n        }\n    } \n    \n    getWeeklyPresentations = () => {\n        let filteredAppointmentsByWeek = this.state.appointments.filter(appointment => moment(appointment.date).isSame(this.state.currentDate, 'week'))\n        let salesonWeeklyAppointments = filteredAppointmentsByWeek.filter(appointment => appointment['made_sale?'])\n        this.setState(\n            { \n                weekAppointments: filteredAppointmentsByWeek,\n                weeklySales: salesonWeeklyAppointments  \n            }, () => this.setState({ polarChartData: this.setPolarChartData()  }));\n        let presentationAppointments = filteredAppointmentsByWeek.filter(appointment => appointment['presentation_made?'])\n        return presentationAppointments\n    }\n\n\n    render() { \n        // console.log('i am props', this.props)\n        // console.log('i am state',this.state)\n        // console.log('filterAppp' , this.getWeeklyPresentations())\n        return ( \n            <div className=\"weekly-presentation-metric\">\n                <h2>Weekly Production</h2>\n                <Polar \n                        data={this.state.polarChartData}\n                    />\n            </div>\n        );\n    }\n}\n\nexport default WeeklyProduction;"]},"metadata":{},"sourceType":"module"}